<?xml version="1.0"?>
<doc>
    <assembly>
        <name>AWSSDK.LicenseManager</name>
    </assembly>
    <members>
        <member name="T:Amazon.LicenseManager.AmazonLicenseManagerConfig">
            <summary>
            Configuration for accessing Amazon LicenseManager service
            </summary>
        </member>
        <member name="M:Amazon.LicenseManager.AmazonLicenseManagerConfig.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.AmazonLicenseManagerConfig.RegionEndpointServiceName">
            <summary>
            The constant used to lookup in the region hash the endpoint.
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.AmazonLicenseManagerConfig.ServiceVersion">
            <summary>
            Gets the ServiceVersion property.
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.AmazonLicenseManagerConfig.UserAgent">
            <summary>
            Gets the value of UserAgent property.
            </summary>
        </member>
        <member name="T:Amazon.LicenseManager.AmazonLicenseManagerException">
            <summary>
             Common exception for the LicenseManager service.
             </summary>
        </member>
        <member name="M:Amazon.LicenseManager.AmazonLicenseManagerException.#ctor(System.String)">
            <summary>
            Construct instance of AmazonLicenseManagerException
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:Amazon.LicenseManager.AmazonLicenseManagerException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of AmazonLicenseManagerException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.LicenseManager.AmazonLicenseManagerException.#ctor(System.Exception)">
            <summary>
            Construct instance of AmazonLicenseManagerException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.LicenseManager.AmazonLicenseManagerException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of AmazonLicenseManagerException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.LicenseManager.AmazonLicenseManagerException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of AmazonLicenseManagerException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.LicenseManager.Internal.AmazonLicenseManagerMetadata">
            <summary>
            Service metadata for  Amazon LicenseManager service
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Internal.AmazonLicenseManagerMetadata.ServiceId">
            <summary>
            Gets the value of the Service Id.
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Internal.AmazonLicenseManagerMetadata.OperationNameMapping">
            <summary>
            Gets the dictionary that gives mapping of renamed operations
            </summary>
        </member>
        <member name="T:Amazon.LicenseManager.Model.AccessDeniedException">
            <summary>
             LicenseManager exception
             </summary>
        </member>
        <member name="M:Amazon.LicenseManager.Model.AccessDeniedException.#ctor(System.String)">
            <summary>
            Constructs a new AccessDeniedException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.LicenseManager.Model.AccessDeniedException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of AccessDeniedException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.LicenseManager.Model.AccessDeniedException.#ctor(System.Exception)">
            <summary>
            Construct instance of AccessDeniedException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.LicenseManager.Model.AccessDeniedException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of AccessDeniedException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.LicenseManager.Model.AccessDeniedException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of AccessDeniedException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.LicenseManager.Model.AuthorizationException">
            <summary>
             LicenseManager exception
             </summary>
        </member>
        <member name="M:Amazon.LicenseManager.Model.AuthorizationException.#ctor(System.String)">
            <summary>
            Constructs a new AuthorizationException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.LicenseManager.Model.AuthorizationException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of AuthorizationException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.LicenseManager.Model.AuthorizationException.#ctor(System.Exception)">
            <summary>
            Construct instance of AuthorizationException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.LicenseManager.Model.AuthorizationException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of AuthorizationException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.LicenseManager.Model.AuthorizationException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of AuthorizationException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.LicenseManager.Model.AutomatedDiscoveryInformation">
            <summary>
            Describes automated discovery.
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.AutomatedDiscoveryInformation.LastRunTime">
            <summary>
            Gets and sets the property LastRunTime. 
            <para>
            Time that automated discovery last ran.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LicenseManager.Model.ConsumedLicenseSummary">
            <summary>
            Details about license consumption.
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.ConsumedLicenseSummary.ConsumedLicenses">
            <summary>
            Gets and sets the property ConsumedLicenses. 
            <para>
            Number of licenses consumed by the resource.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.ConsumedLicenseSummary.ResourceType">
            <summary>
            Gets and sets the property ResourceType. 
            <para>
            Resource type of the resource consuming a license.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LicenseManager.Model.CreateLicenseConfigurationRequest">
            <summary>
            Container for the parameters to the CreateLicenseConfiguration operation.
            Creates a license configuration.
            
             
            <para>
            A license configuration is an abstraction of a customer license agreement that can
            be consumed and enforced by License Manager. Components include specifications for
            the license type (licensing by instance, socket, CPU, or vCPU), allowed tenancy (shared
            tenancy, Dedicated Instance, Dedicated Host, or all of these), host affinity (how
            long a VM must be associated with a host), and the number of licenses purchased and
            used.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.CreateLicenseConfigurationRequest.Description">
            <summary>
            Gets and sets the property Description. 
            <para>
            Description of the license configuration.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.CreateLicenseConfigurationRequest.LicenseCount">
            <summary>
            Gets and sets the property LicenseCount. 
            <para>
            Number of licenses managed by the license configuration.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.CreateLicenseConfigurationRequest.LicenseCountHardLimit">
            <summary>
            Gets and sets the property LicenseCountHardLimit. 
            <para>
            Indicates whether hard or soft license enforcement is used. Exceeding a hard limit
            blocks the launch of new instances.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.CreateLicenseConfigurationRequest.LicenseCountingType">
            <summary>
            Gets and sets the property LicenseCountingType. 
            <para>
            Dimension used to track the license inventory.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.CreateLicenseConfigurationRequest.LicenseRules">
            <summary>
            Gets and sets the property LicenseRules. 
            <para>
            License rules. The syntax is #name=value (for example, #allowedTenancy=EC2-DedicatedHost).
            Available rules vary by dimension.
            </para>
             <ul> <li> 
            <para>
             <code>Cores</code> dimension: <code>allowedTenancy</code> | <code>maximumCores</code>
            | <code>minimumCores</code> 
            </para>
             </li> <li> 
            <para>
             <code>Instances</code> dimension: <code>allowedTenancy</code> | <code>maximumCores</code>
            | <code>minimumCores</code> | <code>maximumSockets</code> | <code>minimumSockets</code>
            | <code>maximumVcpus</code> | <code>minimumVcpus</code> 
            </para>
             </li> <li> 
            <para>
             <code>Sockets</code> dimension: <code>allowedTenancy</code> | <code>maximumSockets</code>
            | <code>minimumSockets</code> 
            </para>
             </li> <li> 
            <para>
             <code>vCPUs</code> dimension: <code>allowedTenancy</code> | <code>honorVcpuOptimization</code>
            | <code>maximumVcpus</code> | <code>minimumVcpus</code> 
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.CreateLicenseConfigurationRequest.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            Name of the license configuration.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.CreateLicenseConfigurationRequest.ProductInformationList">
            <summary>
            Gets and sets the property ProductInformationList. 
            <para>
            Product information.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.CreateLicenseConfigurationRequest.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            Tags to add to the license configuration.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LicenseManager.Model.CreateLicenseConfigurationResponse">
            <summary>
            This is the response object from the CreateLicenseConfiguration operation.
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.CreateLicenseConfigurationResponse.LicenseConfigurationArn">
            <summary>
            Gets and sets the property LicenseConfigurationArn. 
            <para>
            Amazon Resource Name (ARN) of the license configuration.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LicenseManager.Model.DeleteLicenseConfigurationRequest">
            <summary>
            Container for the parameters to the DeleteLicenseConfiguration operation.
            Deletes the specified license configuration.
            
             
            <para>
            You cannot delete a license configuration that is in use.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.DeleteLicenseConfigurationRequest.LicenseConfigurationArn">
            <summary>
            Gets and sets the property LicenseConfigurationArn. 
            <para>
            ID of the license configuration.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LicenseManager.Model.DeleteLicenseConfigurationResponse">
            <summary>
            This is the response object from the DeleteLicenseConfiguration operation.
            </summary>
        </member>
        <member name="T:Amazon.LicenseManager.Model.FailedDependencyException">
            <summary>
             LicenseManager exception
             </summary>
        </member>
        <member name="M:Amazon.LicenseManager.Model.FailedDependencyException.#ctor(System.String)">
            <summary>
            Constructs a new FailedDependencyException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.LicenseManager.Model.FailedDependencyException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of FailedDependencyException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.LicenseManager.Model.FailedDependencyException.#ctor(System.Exception)">
            <summary>
            Construct instance of FailedDependencyException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.LicenseManager.Model.FailedDependencyException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of FailedDependencyException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.LicenseManager.Model.FailedDependencyException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of FailedDependencyException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.LicenseManager.Model.Filter">
            <summary>
            A filter name and value pair that is used to return more specific results from a describe
            operation. Filters can be used to match a set of resources by specific criteria, such
            as tags, attributes, or IDs.
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.Filter.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            Name of the filter. Filter names are case-sensitive.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.Filter.Values">
            <summary>
            Gets and sets the property Values. 
            <para>
            Filter values. Filter values are case-sensitive.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LicenseManager.Model.FilterLimitExceededException">
            <summary>
             LicenseManager exception
             </summary>
        </member>
        <member name="M:Amazon.LicenseManager.Model.FilterLimitExceededException.#ctor(System.String)">
            <summary>
            Constructs a new FilterLimitExceededException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.LicenseManager.Model.FilterLimitExceededException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of FilterLimitExceededException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.LicenseManager.Model.FilterLimitExceededException.#ctor(System.Exception)">
            <summary>
            Construct instance of FilterLimitExceededException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.LicenseManager.Model.FilterLimitExceededException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of FilterLimitExceededException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.LicenseManager.Model.FilterLimitExceededException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of FilterLimitExceededException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.LicenseManager.Model.GetLicenseConfigurationRequest">
            <summary>
            Container for the parameters to the GetLicenseConfiguration operation.
            Gets detailed information about the specified license configuration.
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.GetLicenseConfigurationRequest.LicenseConfigurationArn">
            <summary>
            Gets and sets the property LicenseConfigurationArn. 
            <para>
            Amazon Resource Name (ARN) of the license configuration.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LicenseManager.Model.GetLicenseConfigurationResponse">
            <summary>
            This is the response object from the GetLicenseConfiguration operation.
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.GetLicenseConfigurationResponse.AutomatedDiscoveryInformation">
            <summary>
            Gets and sets the property AutomatedDiscoveryInformation. 
            <para>
            Automated discovery information.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.GetLicenseConfigurationResponse.ConsumedLicenses">
            <summary>
            Gets and sets the property ConsumedLicenses. 
            <para>
            Number of licenses assigned to resources.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.GetLicenseConfigurationResponse.ConsumedLicenseSummaryList">
            <summary>
            Gets and sets the property ConsumedLicenseSummaryList. 
            <para>
            Summaries of the licenses consumed by resources.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.GetLicenseConfigurationResponse.Description">
            <summary>
            Gets and sets the property Description. 
            <para>
            Description of the license configuration.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.GetLicenseConfigurationResponse.LicenseConfigurationArn">
            <summary>
            Gets and sets the property LicenseConfigurationArn. 
            <para>
            Amazon Resource Name (ARN) of the license configuration.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.GetLicenseConfigurationResponse.LicenseConfigurationId">
            <summary>
            Gets and sets the property LicenseConfigurationId. 
            <para>
            Unique ID for the license configuration.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.GetLicenseConfigurationResponse.LicenseCount">
            <summary>
            Gets and sets the property LicenseCount. 
            <para>
            Number of available licenses.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.GetLicenseConfigurationResponse.LicenseCountHardLimit">
            <summary>
            Gets and sets the property LicenseCountHardLimit. 
            <para>
            Sets the number of available licenses as a hard limit.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.GetLicenseConfigurationResponse.LicenseCountingType">
            <summary>
            Gets and sets the property LicenseCountingType. 
            <para>
            Dimension on which the licenses are counted.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.GetLicenseConfigurationResponse.LicenseRules">
            <summary>
            Gets and sets the property LicenseRules. 
            <para>
            License rules.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.GetLicenseConfigurationResponse.ManagedResourceSummaryList">
            <summary>
            Gets and sets the property ManagedResourceSummaryList. 
            <para>
            Summaries of the managed resources.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.GetLicenseConfigurationResponse.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            Name of the license configuration.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.GetLicenseConfigurationResponse.OwnerAccountId">
            <summary>
            Gets and sets the property OwnerAccountId. 
            <para>
            Account ID of the owner of the license configuration.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.GetLicenseConfigurationResponse.ProductInformationList">
            <summary>
            Gets and sets the property ProductInformationList. 
            <para>
            Product information.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.GetLicenseConfigurationResponse.Status">
            <summary>
            Gets and sets the property Status. 
            <para>
            License configuration status.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.GetLicenseConfigurationResponse.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            Tags for the license configuration.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LicenseManager.Model.GetServiceSettingsRequest">
            <summary>
            Container for the parameters to the GetServiceSettings operation.
            Gets the License Manager settings for the current Region.
            </summary>
        </member>
        <member name="T:Amazon.LicenseManager.Model.GetServiceSettingsResponse">
            <summary>
            This is the response object from the GetServiceSettings operation.
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.GetServiceSettingsResponse.EnableCrossAccountsDiscovery">
            <summary>
            Gets and sets the property EnableCrossAccountsDiscovery. 
            <para>
            Indicates whether cross-account discovery has been enabled.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.GetServiceSettingsResponse.LicenseManagerResourceShareArn">
            <summary>
            Gets and sets the property LicenseManagerResourceShareArn. 
            <para>
            Amazon Resource Name (ARN) of the AWS resource share. The License Manager master account
            will provide member accounts with access to this share.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.GetServiceSettingsResponse.OrganizationConfiguration">
            <summary>
            Gets and sets the property OrganizationConfiguration. 
            <para>
            Indicates whether AWS Organizations has been integrated with License Manager for cross-account
            discovery.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.GetServiceSettingsResponse.S3BucketArn">
            <summary>
            Gets and sets the property S3BucketArn. 
            <para>
            Regional S3 bucket path for storing reports, license trail event data, discovery data,
            and so on.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.GetServiceSettingsResponse.SnsTopicArn">
            <summary>
            Gets and sets the property SnsTopicArn. 
            <para>
            SNS topic configured to receive notifications from License Manager.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LicenseManager.Model.Internal.MarshallTransformations.AutomatedDiscoveryInformationUnmarshaller">
            <summary>
            Response Unmarshaller for AutomatedDiscoveryInformation Object
            </summary>  
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.AutomatedDiscoveryInformationUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#LicenseManager#Model#AutomatedDiscoveryInformation,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.AutomatedDiscoveryInformationUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LicenseManager.Model.Internal.MarshallTransformations.AutomatedDiscoveryInformationUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LicenseManager.Model.Internal.MarshallTransformations.ConsumedLicenseSummaryUnmarshaller">
            <summary>
            Response Unmarshaller for ConsumedLicenseSummary Object
            </summary>  
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.ConsumedLicenseSummaryUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#LicenseManager#Model#ConsumedLicenseSummary,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.ConsumedLicenseSummaryUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LicenseManager.Model.Internal.MarshallTransformations.ConsumedLicenseSummaryUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LicenseManager.Model.Internal.MarshallTransformations.CreateLicenseConfigurationRequestMarshaller">
            <summary>
            CreateLicenseConfiguration Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.CreateLicenseConfigurationRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.CreateLicenseConfigurationRequestMarshaller.Marshall(Amazon.LicenseManager.Model.CreateLicenseConfigurationRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LicenseManager.Model.Internal.MarshallTransformations.CreateLicenseConfigurationRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LicenseManager.Model.Internal.MarshallTransformations.CreateLicenseConfigurationResponseUnmarshaller">
            <summary>
            Response Unmarshaller for CreateLicenseConfiguration operation
            </summary>  
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.CreateLicenseConfigurationResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.CreateLicenseConfigurationResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LicenseManager.Model.Internal.MarshallTransformations.CreateLicenseConfigurationResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LicenseManager.Model.Internal.MarshallTransformations.DeleteLicenseConfigurationRequestMarshaller">
            <summary>
            DeleteLicenseConfiguration Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.DeleteLicenseConfigurationRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.DeleteLicenseConfigurationRequestMarshaller.Marshall(Amazon.LicenseManager.Model.DeleteLicenseConfigurationRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LicenseManager.Model.Internal.MarshallTransformations.DeleteLicenseConfigurationRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LicenseManager.Model.Internal.MarshallTransformations.DeleteLicenseConfigurationResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeleteLicenseConfiguration operation
            </summary>  
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.DeleteLicenseConfigurationResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.DeleteLicenseConfigurationResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LicenseManager.Model.Internal.MarshallTransformations.DeleteLicenseConfigurationResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LicenseManager.Model.Internal.MarshallTransformations.FilterMarshaller">
            <summary>
            Filter Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.FilterMarshaller.Marshall(Amazon.LicenseManager.Model.Filter,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.LicenseManager.Model.Internal.MarshallTransformations.FilterMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.LicenseManager.Model.Internal.MarshallTransformations.GetLicenseConfigurationRequestMarshaller">
            <summary>
            GetLicenseConfiguration Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.GetLicenseConfigurationRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.GetLicenseConfigurationRequestMarshaller.Marshall(Amazon.LicenseManager.Model.GetLicenseConfigurationRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LicenseManager.Model.Internal.MarshallTransformations.GetLicenseConfigurationRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LicenseManager.Model.Internal.MarshallTransformations.GetLicenseConfigurationResponseUnmarshaller">
            <summary>
            Response Unmarshaller for GetLicenseConfiguration operation
            </summary>  
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.GetLicenseConfigurationResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.GetLicenseConfigurationResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LicenseManager.Model.Internal.MarshallTransformations.GetLicenseConfigurationResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LicenseManager.Model.Internal.MarshallTransformations.GetServiceSettingsRequestMarshaller">
            <summary>
            GetServiceSettings Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.GetServiceSettingsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.GetServiceSettingsRequestMarshaller.Marshall(Amazon.LicenseManager.Model.GetServiceSettingsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LicenseManager.Model.Internal.MarshallTransformations.GetServiceSettingsRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LicenseManager.Model.Internal.MarshallTransformations.GetServiceSettingsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for GetServiceSettings operation
            </summary>  
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.GetServiceSettingsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.GetServiceSettingsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LicenseManager.Model.Internal.MarshallTransformations.GetServiceSettingsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LicenseManager.Model.Internal.MarshallTransformations.InventoryFilterMarshaller">
            <summary>
            InventoryFilter Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.InventoryFilterMarshaller.Marshall(Amazon.LicenseManager.Model.InventoryFilter,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.LicenseManager.Model.Internal.MarshallTransformations.InventoryFilterMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.LicenseManager.Model.Internal.MarshallTransformations.LicenseConfigurationAssociationUnmarshaller">
            <summary>
            Response Unmarshaller for LicenseConfigurationAssociation Object
            </summary>  
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.LicenseConfigurationAssociationUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#LicenseManager#Model#LicenseConfigurationAssociation,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.LicenseConfigurationAssociationUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LicenseManager.Model.Internal.MarshallTransformations.LicenseConfigurationAssociationUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LicenseManager.Model.Internal.MarshallTransformations.LicenseConfigurationUnmarshaller">
            <summary>
            Response Unmarshaller for LicenseConfiguration Object
            </summary>  
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.LicenseConfigurationUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#LicenseManager#Model#LicenseConfiguration,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.LicenseConfigurationUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LicenseManager.Model.Internal.MarshallTransformations.LicenseConfigurationUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LicenseManager.Model.Internal.MarshallTransformations.LicenseConfigurationUsageUnmarshaller">
            <summary>
            Response Unmarshaller for LicenseConfigurationUsage Object
            </summary>  
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.LicenseConfigurationUsageUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#LicenseManager#Model#LicenseConfigurationUsage,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.LicenseConfigurationUsageUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LicenseManager.Model.Internal.MarshallTransformations.LicenseConfigurationUsageUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LicenseManager.Model.Internal.MarshallTransformations.LicenseOperationFailureUnmarshaller">
            <summary>
            Response Unmarshaller for LicenseOperationFailure Object
            </summary>  
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.LicenseOperationFailureUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#LicenseManager#Model#LicenseOperationFailure,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.LicenseOperationFailureUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LicenseManager.Model.Internal.MarshallTransformations.LicenseOperationFailureUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LicenseManager.Model.Internal.MarshallTransformations.LicenseSpecificationMarshaller">
            <summary>
            LicenseSpecification Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.LicenseSpecificationMarshaller.Marshall(Amazon.LicenseManager.Model.LicenseSpecification,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.LicenseManager.Model.Internal.MarshallTransformations.LicenseSpecificationMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.LicenseManager.Model.Internal.MarshallTransformations.LicenseSpecificationUnmarshaller">
            <summary>
            Response Unmarshaller for LicenseSpecification Object
            </summary>  
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.LicenseSpecificationUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#LicenseManager#Model#LicenseSpecification,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.LicenseSpecificationUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LicenseManager.Model.Internal.MarshallTransformations.LicenseSpecificationUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LicenseManager.Model.Internal.MarshallTransformations.ListAssociationsForLicenseConfigurationRequestMarshaller">
            <summary>
            ListAssociationsForLicenseConfiguration Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.ListAssociationsForLicenseConfigurationRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.ListAssociationsForLicenseConfigurationRequestMarshaller.Marshall(Amazon.LicenseManager.Model.ListAssociationsForLicenseConfigurationRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LicenseManager.Model.Internal.MarshallTransformations.ListAssociationsForLicenseConfigurationRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LicenseManager.Model.Internal.MarshallTransformations.ListAssociationsForLicenseConfigurationResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ListAssociationsForLicenseConfiguration operation
            </summary>  
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.ListAssociationsForLicenseConfigurationResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.ListAssociationsForLicenseConfigurationResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LicenseManager.Model.Internal.MarshallTransformations.ListAssociationsForLicenseConfigurationResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LicenseManager.Model.Internal.MarshallTransformations.ListFailuresForLicenseConfigurationOperationsRequestMarshaller">
            <summary>
            ListFailuresForLicenseConfigurationOperations Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.ListFailuresForLicenseConfigurationOperationsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.ListFailuresForLicenseConfigurationOperationsRequestMarshaller.Marshall(Amazon.LicenseManager.Model.ListFailuresForLicenseConfigurationOperationsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LicenseManager.Model.Internal.MarshallTransformations.ListFailuresForLicenseConfigurationOperationsRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LicenseManager.Model.Internal.MarshallTransformations.ListFailuresForLicenseConfigurationOperationsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ListFailuresForLicenseConfigurationOperations operation
            </summary>  
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.ListFailuresForLicenseConfigurationOperationsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.ListFailuresForLicenseConfigurationOperationsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LicenseManager.Model.Internal.MarshallTransformations.ListFailuresForLicenseConfigurationOperationsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LicenseManager.Model.Internal.MarshallTransformations.ListLicenseConfigurationsRequestMarshaller">
            <summary>
            ListLicenseConfigurations Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.ListLicenseConfigurationsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.ListLicenseConfigurationsRequestMarshaller.Marshall(Amazon.LicenseManager.Model.ListLicenseConfigurationsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LicenseManager.Model.Internal.MarshallTransformations.ListLicenseConfigurationsRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LicenseManager.Model.Internal.MarshallTransformations.ListLicenseConfigurationsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ListLicenseConfigurations operation
            </summary>  
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.ListLicenseConfigurationsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.ListLicenseConfigurationsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LicenseManager.Model.Internal.MarshallTransformations.ListLicenseConfigurationsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LicenseManager.Model.Internal.MarshallTransformations.ListLicenseSpecificationsForResourceRequestMarshaller">
            <summary>
            ListLicenseSpecificationsForResource Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.ListLicenseSpecificationsForResourceRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.ListLicenseSpecificationsForResourceRequestMarshaller.Marshall(Amazon.LicenseManager.Model.ListLicenseSpecificationsForResourceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LicenseManager.Model.Internal.MarshallTransformations.ListLicenseSpecificationsForResourceRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LicenseManager.Model.Internal.MarshallTransformations.ListLicenseSpecificationsForResourceResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ListLicenseSpecificationsForResource operation
            </summary>  
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.ListLicenseSpecificationsForResourceResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.ListLicenseSpecificationsForResourceResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LicenseManager.Model.Internal.MarshallTransformations.ListLicenseSpecificationsForResourceResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LicenseManager.Model.Internal.MarshallTransformations.ListResourceInventoryRequestMarshaller">
            <summary>
            ListResourceInventory Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.ListResourceInventoryRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.ListResourceInventoryRequestMarshaller.Marshall(Amazon.LicenseManager.Model.ListResourceInventoryRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LicenseManager.Model.Internal.MarshallTransformations.ListResourceInventoryRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LicenseManager.Model.Internal.MarshallTransformations.ListResourceInventoryResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ListResourceInventory operation
            </summary>  
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.ListResourceInventoryResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.ListResourceInventoryResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LicenseManager.Model.Internal.MarshallTransformations.ListResourceInventoryResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LicenseManager.Model.Internal.MarshallTransformations.ListTagsForResourceRequestMarshaller">
            <summary>
            ListTagsForResource Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.ListTagsForResourceRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.ListTagsForResourceRequestMarshaller.Marshall(Amazon.LicenseManager.Model.ListTagsForResourceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LicenseManager.Model.Internal.MarshallTransformations.ListTagsForResourceRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LicenseManager.Model.Internal.MarshallTransformations.ListTagsForResourceResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ListTagsForResource operation
            </summary>  
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.ListTagsForResourceResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.ListTagsForResourceResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LicenseManager.Model.Internal.MarshallTransformations.ListTagsForResourceResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LicenseManager.Model.Internal.MarshallTransformations.ListUsageForLicenseConfigurationRequestMarshaller">
            <summary>
            ListUsageForLicenseConfiguration Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.ListUsageForLicenseConfigurationRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.ListUsageForLicenseConfigurationRequestMarshaller.Marshall(Amazon.LicenseManager.Model.ListUsageForLicenseConfigurationRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LicenseManager.Model.Internal.MarshallTransformations.ListUsageForLicenseConfigurationRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LicenseManager.Model.Internal.MarshallTransformations.ListUsageForLicenseConfigurationResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ListUsageForLicenseConfiguration operation
            </summary>  
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.ListUsageForLicenseConfigurationResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.ListUsageForLicenseConfigurationResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LicenseManager.Model.Internal.MarshallTransformations.ListUsageForLicenseConfigurationResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LicenseManager.Model.Internal.MarshallTransformations.ManagedResourceSummaryUnmarshaller">
            <summary>
            Response Unmarshaller for ManagedResourceSummary Object
            </summary>  
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.ManagedResourceSummaryUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#LicenseManager#Model#ManagedResourceSummary,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.ManagedResourceSummaryUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LicenseManager.Model.Internal.MarshallTransformations.ManagedResourceSummaryUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LicenseManager.Model.Internal.MarshallTransformations.MetadataUnmarshaller">
            <summary>
            Response Unmarshaller for Metadata Object
            </summary>  
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.MetadataUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#LicenseManager#Model#Metadata,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.MetadataUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LicenseManager.Model.Internal.MarshallTransformations.MetadataUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LicenseManager.Model.Internal.MarshallTransformations.OrganizationConfigurationMarshaller">
            <summary>
            OrganizationConfiguration Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.OrganizationConfigurationMarshaller.Marshall(Amazon.LicenseManager.Model.OrganizationConfiguration,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.LicenseManager.Model.Internal.MarshallTransformations.OrganizationConfigurationMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.LicenseManager.Model.Internal.MarshallTransformations.OrganizationConfigurationUnmarshaller">
            <summary>
            Response Unmarshaller for OrganizationConfiguration Object
            </summary>  
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.OrganizationConfigurationUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#LicenseManager#Model#OrganizationConfiguration,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.OrganizationConfigurationUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LicenseManager.Model.Internal.MarshallTransformations.OrganizationConfigurationUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LicenseManager.Model.Internal.MarshallTransformations.ProductInformationFilterMarshaller">
            <summary>
            ProductInformationFilter Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.ProductInformationFilterMarshaller.Marshall(Amazon.LicenseManager.Model.ProductInformationFilter,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.LicenseManager.Model.Internal.MarshallTransformations.ProductInformationFilterMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.LicenseManager.Model.Internal.MarshallTransformations.ProductInformationFilterUnmarshaller">
            <summary>
            Response Unmarshaller for ProductInformationFilter Object
            </summary>  
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.ProductInformationFilterUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#LicenseManager#Model#ProductInformationFilter,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.ProductInformationFilterUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LicenseManager.Model.Internal.MarshallTransformations.ProductInformationFilterUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LicenseManager.Model.Internal.MarshallTransformations.ProductInformationMarshaller">
            <summary>
            ProductInformation Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.ProductInformationMarshaller.Marshall(Amazon.LicenseManager.Model.ProductInformation,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.LicenseManager.Model.Internal.MarshallTransformations.ProductInformationMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.LicenseManager.Model.Internal.MarshallTransformations.ProductInformationUnmarshaller">
            <summary>
            Response Unmarshaller for ProductInformation Object
            </summary>  
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.ProductInformationUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#LicenseManager#Model#ProductInformation,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.ProductInformationUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LicenseManager.Model.Internal.MarshallTransformations.ProductInformationUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LicenseManager.Model.Internal.MarshallTransformations.ResourceInventoryUnmarshaller">
            <summary>
            Response Unmarshaller for ResourceInventory Object
            </summary>  
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.ResourceInventoryUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#LicenseManager#Model#ResourceInventory,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.ResourceInventoryUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LicenseManager.Model.Internal.MarshallTransformations.ResourceInventoryUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LicenseManager.Model.Internal.MarshallTransformations.TagMarshaller">
            <summary>
            Tag Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.TagMarshaller.Marshall(Amazon.LicenseManager.Model.Tag,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.LicenseManager.Model.Internal.MarshallTransformations.TagMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.LicenseManager.Model.Internal.MarshallTransformations.TagResourceRequestMarshaller">
            <summary>
            TagResource Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.TagResourceRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.TagResourceRequestMarshaller.Marshall(Amazon.LicenseManager.Model.TagResourceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LicenseManager.Model.Internal.MarshallTransformations.TagResourceRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LicenseManager.Model.Internal.MarshallTransformations.TagResourceResponseUnmarshaller">
            <summary>
            Response Unmarshaller for TagResource operation
            </summary>  
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.TagResourceResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.TagResourceResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LicenseManager.Model.Internal.MarshallTransformations.TagResourceResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LicenseManager.Model.Internal.MarshallTransformations.TagUnmarshaller">
            <summary>
            Response Unmarshaller for Tag Object
            </summary>  
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.TagUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#LicenseManager#Model#Tag,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.TagUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LicenseManager.Model.Internal.MarshallTransformations.TagUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LicenseManager.Model.Internal.MarshallTransformations.UntagResourceRequestMarshaller">
            <summary>
            UntagResource Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.UntagResourceRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.UntagResourceRequestMarshaller.Marshall(Amazon.LicenseManager.Model.UntagResourceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LicenseManager.Model.Internal.MarshallTransformations.UntagResourceRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LicenseManager.Model.Internal.MarshallTransformations.UntagResourceResponseUnmarshaller">
            <summary>
            Response Unmarshaller for UntagResource operation
            </summary>  
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.UntagResourceResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.UntagResourceResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LicenseManager.Model.Internal.MarshallTransformations.UntagResourceResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LicenseManager.Model.Internal.MarshallTransformations.UpdateLicenseConfigurationRequestMarshaller">
            <summary>
            UpdateLicenseConfiguration Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.UpdateLicenseConfigurationRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.UpdateLicenseConfigurationRequestMarshaller.Marshall(Amazon.LicenseManager.Model.UpdateLicenseConfigurationRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LicenseManager.Model.Internal.MarshallTransformations.UpdateLicenseConfigurationRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LicenseManager.Model.Internal.MarshallTransformations.UpdateLicenseConfigurationResponseUnmarshaller">
            <summary>
            Response Unmarshaller for UpdateLicenseConfiguration operation
            </summary>  
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.UpdateLicenseConfigurationResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.UpdateLicenseConfigurationResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LicenseManager.Model.Internal.MarshallTransformations.UpdateLicenseConfigurationResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LicenseManager.Model.Internal.MarshallTransformations.UpdateLicenseSpecificationsForResourceRequestMarshaller">
            <summary>
            UpdateLicenseSpecificationsForResource Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.UpdateLicenseSpecificationsForResourceRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.UpdateLicenseSpecificationsForResourceRequestMarshaller.Marshall(Amazon.LicenseManager.Model.UpdateLicenseSpecificationsForResourceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LicenseManager.Model.Internal.MarshallTransformations.UpdateLicenseSpecificationsForResourceRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LicenseManager.Model.Internal.MarshallTransformations.UpdateLicenseSpecificationsForResourceResponseUnmarshaller">
            <summary>
            Response Unmarshaller for UpdateLicenseSpecificationsForResource operation
            </summary>  
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.UpdateLicenseSpecificationsForResourceResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.UpdateLicenseSpecificationsForResourceResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LicenseManager.Model.Internal.MarshallTransformations.UpdateLicenseSpecificationsForResourceResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LicenseManager.Model.Internal.MarshallTransformations.UpdateServiceSettingsRequestMarshaller">
            <summary>
            UpdateServiceSettings Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.UpdateServiceSettingsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.UpdateServiceSettingsRequestMarshaller.Marshall(Amazon.LicenseManager.Model.UpdateServiceSettingsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LicenseManager.Model.Internal.MarshallTransformations.UpdateServiceSettingsRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LicenseManager.Model.Internal.MarshallTransformations.UpdateServiceSettingsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for UpdateServiceSettings operation
            </summary>  
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.UpdateServiceSettingsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LicenseManager.Model.Internal.MarshallTransformations.UpdateServiceSettingsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LicenseManager.Model.Internal.MarshallTransformations.UpdateServiceSettingsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LicenseManager.Model.InvalidParameterValueException">
            <summary>
             LicenseManager exception
             </summary>
        </member>
        <member name="M:Amazon.LicenseManager.Model.InvalidParameterValueException.#ctor(System.String)">
            <summary>
            Constructs a new InvalidParameterValueException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.LicenseManager.Model.InvalidParameterValueException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of InvalidParameterValueException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.LicenseManager.Model.InvalidParameterValueException.#ctor(System.Exception)">
            <summary>
            Construct instance of InvalidParameterValueException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.LicenseManager.Model.InvalidParameterValueException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidParameterValueException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.LicenseManager.Model.InvalidParameterValueException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidParameterValueException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.LicenseManager.Model.InvalidResourceStateException">
            <summary>
             LicenseManager exception
             </summary>
        </member>
        <member name="M:Amazon.LicenseManager.Model.InvalidResourceStateException.#ctor(System.String)">
            <summary>
            Constructs a new InvalidResourceStateException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.LicenseManager.Model.InvalidResourceStateException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of InvalidResourceStateException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.LicenseManager.Model.InvalidResourceStateException.#ctor(System.Exception)">
            <summary>
            Construct instance of InvalidResourceStateException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.LicenseManager.Model.InvalidResourceStateException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidResourceStateException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.LicenseManager.Model.InvalidResourceStateException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidResourceStateException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.LicenseManager.Model.InventoryFilter">
            <summary>
            An inventory filter.
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.InventoryFilter.Condition">
            <summary>
            Gets and sets the property Condition. 
            <para>
            Condition of the filter.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.InventoryFilter.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            Name of the filter.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.InventoryFilter.Value">
            <summary>
            Gets and sets the property Value. 
            <para>
            Value of the filter.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LicenseManager.Model.LicenseConfiguration">
            <summary>
            A license configuration is an abstraction of a customer license agreement that can
            be consumed and enforced by License Manager. Components include specifications for
            the license type (licensing by instance, socket, CPU, or vCPU), allowed tenancy (shared
            tenancy, Dedicated Instance, Dedicated Host, or all of these), host affinity (how
            long a VM must be associated with a host), and the number of licenses purchased and
            used.
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.LicenseConfiguration.AutomatedDiscoveryInformation">
            <summary>
            Gets and sets the property AutomatedDiscoveryInformation. 
            <para>
            Automated discovery information.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.LicenseConfiguration.ConsumedLicenses">
            <summary>
            Gets and sets the property ConsumedLicenses. 
            <para>
            Number of licenses consumed. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.LicenseConfiguration.ConsumedLicenseSummaryList">
            <summary>
            Gets and sets the property ConsumedLicenseSummaryList. 
            <para>
            Summaries for licenses consumed by various resources.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.LicenseConfiguration.Description">
            <summary>
            Gets and sets the property Description. 
            <para>
            Description of the license configuration.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.LicenseConfiguration.LicenseConfigurationArn">
            <summary>
            Gets and sets the property LicenseConfigurationArn. 
            <para>
            Amazon Resource Name (ARN) of the license configuration.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.LicenseConfiguration.LicenseConfigurationId">
            <summary>
            Gets and sets the property LicenseConfigurationId. 
            <para>
            Unique ID of the license configuration.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.LicenseConfiguration.LicenseCount">
            <summary>
            Gets and sets the property LicenseCount. 
            <para>
            Number of licenses managed by the license configuration.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.LicenseConfiguration.LicenseCountHardLimit">
            <summary>
            Gets and sets the property LicenseCountHardLimit. 
            <para>
            Number of available licenses as a hard limit.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.LicenseConfiguration.LicenseCountingType">
            <summary>
            Gets and sets the property LicenseCountingType. 
            <para>
            Dimension to use to track the license inventory.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.LicenseConfiguration.LicenseRules">
            <summary>
            Gets and sets the property LicenseRules. 
            <para>
            License rules.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.LicenseConfiguration.ManagedResourceSummaryList">
            <summary>
            Gets and sets the property ManagedResourceSummaryList. 
            <para>
            Summaries for managed resources.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.LicenseConfiguration.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            Name of the license configuration.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.LicenseConfiguration.OwnerAccountId">
            <summary>
            Gets and sets the property OwnerAccountId. 
            <para>
            Account ID of the license configuration's owner.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.LicenseConfiguration.ProductInformationList">
            <summary>
            Gets and sets the property ProductInformationList. 
            <para>
            Product information.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.LicenseConfiguration.Status">
            <summary>
            Gets and sets the property Status. 
            <para>
            Status of the license configuration.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LicenseManager.Model.LicenseConfigurationAssociation">
            <summary>
            Describes an association with a license configuration.
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.LicenseConfigurationAssociation.AssociationTime">
            <summary>
            Gets and sets the property AssociationTime. 
            <para>
            Time when the license configuration was associated with the resource.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.LicenseConfigurationAssociation.ResourceArn">
            <summary>
            Gets and sets the property ResourceArn. 
            <para>
            Amazon Resource Name (ARN) of the resource.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.LicenseConfigurationAssociation.ResourceOwnerId">
            <summary>
            Gets and sets the property ResourceOwnerId. 
            <para>
            ID of the AWS account that owns the resource consuming licenses.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.LicenseConfigurationAssociation.ResourceType">
            <summary>
            Gets and sets the property ResourceType. 
            <para>
            Type of server resource.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LicenseManager.Model.LicenseConfigurationUsage">
            <summary>
            Details about the usage of a resource associated with a license configuration.
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.LicenseConfigurationUsage.AssociationTime">
            <summary>
            Gets and sets the property AssociationTime. 
            <para>
            Time when the license configuration was initially associated with the resource.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.LicenseConfigurationUsage.ConsumedLicenses">
            <summary>
            Gets and sets the property ConsumedLicenses. 
            <para>
            Number of licenses consumed by the resource.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.LicenseConfigurationUsage.ResourceArn">
            <summary>
            Gets and sets the property ResourceArn. 
            <para>
            Amazon Resource Name (ARN) of the resource.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.LicenseConfigurationUsage.ResourceOwnerId">
            <summary>
            Gets and sets the property ResourceOwnerId. 
            <para>
            ID of the account that owns the resource.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.LicenseConfigurationUsage.ResourceStatus">
            <summary>
            Gets and sets the property ResourceStatus. 
            <para>
            Status of the resource.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.LicenseConfigurationUsage.ResourceType">
            <summary>
            Gets and sets the property ResourceType. 
            <para>
            Type of resource.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LicenseManager.Model.LicenseOperationFailure">
            <summary>
            Describes the failure of a license operation.
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.LicenseOperationFailure.ErrorMessage">
            <summary>
            Gets and sets the property ErrorMessage. 
            <para>
            Error message.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.LicenseOperationFailure.FailureTime">
            <summary>
            Gets and sets the property FailureTime. 
            <para>
            Failure time.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.LicenseOperationFailure.MetadataList">
            <summary>
            Gets and sets the property MetadataList. 
            <para>
            Reserved.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.LicenseOperationFailure.OperationName">
            <summary>
            Gets and sets the property OperationName. 
            <para>
            Name of the operation.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.LicenseOperationFailure.OperationRequestedBy">
            <summary>
            Gets and sets the property OperationRequestedBy. 
            <para>
            The requester is "License Manager Automated Discovery".
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.LicenseOperationFailure.ResourceArn">
            <summary>
            Gets and sets the property ResourceArn. 
            <para>
            Amazon Resource Name (ARN) of the resource.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.LicenseOperationFailure.ResourceOwnerId">
            <summary>
            Gets and sets the property ResourceOwnerId. 
            <para>
            ID of the AWS account that owns the resource.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.LicenseOperationFailure.ResourceType">
            <summary>
            Gets and sets the property ResourceType. 
            <para>
            Resource type.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LicenseManager.Model.LicenseSpecification">
            <summary>
            Details for associating a license configuration with a resource.
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.LicenseSpecification.LicenseConfigurationArn">
            <summary>
            Gets and sets the property LicenseConfigurationArn. 
            <para>
            Amazon Resource Name (ARN) of the license configuration.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LicenseManager.Model.LicenseUsageException">
            <summary>
             LicenseManager exception
             </summary>
        </member>
        <member name="M:Amazon.LicenseManager.Model.LicenseUsageException.#ctor(System.String)">
            <summary>
            Constructs a new LicenseUsageException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.LicenseManager.Model.LicenseUsageException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of LicenseUsageException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.LicenseManager.Model.LicenseUsageException.#ctor(System.Exception)">
            <summary>
            Construct instance of LicenseUsageException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.LicenseManager.Model.LicenseUsageException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of LicenseUsageException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.LicenseManager.Model.LicenseUsageException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of LicenseUsageException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.LicenseManager.Model.ListAssociationsForLicenseConfigurationRequest">
            <summary>
            Container for the parameters to the ListAssociationsForLicenseConfiguration operation.
            Lists the resource associations for the specified license configuration.
            
             
            <para>
            Resource associations need not consume licenses from a license configuration. For
            example, an AMI or a stopped instance might not consume a license (depending on the
            license rules).
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.ListAssociationsForLicenseConfigurationRequest.LicenseConfigurationArn">
            <summary>
            Gets and sets the property LicenseConfigurationArn. 
            <para>
            Amazon Resource Name (ARN) of a license configuration.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.ListAssociationsForLicenseConfigurationRequest.MaxResults">
            <summary>
            Gets and sets the property MaxResults. 
            <para>
            Maximum number of results to return in a single call.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.ListAssociationsForLicenseConfigurationRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            Token for the next set of results.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LicenseManager.Model.ListAssociationsForLicenseConfigurationResponse">
            <summary>
            This is the response object from the ListAssociationsForLicenseConfiguration operation.
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.ListAssociationsForLicenseConfigurationResponse.LicenseConfigurationAssociations">
            <summary>
            Gets and sets the property LicenseConfigurationAssociations. 
            <para>
            Information about the associations for the license configuration.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.ListAssociationsForLicenseConfigurationResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            Token for the next set of results.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LicenseManager.Model.ListFailuresForLicenseConfigurationOperationsRequest">
            <summary>
            Container for the parameters to the ListFailuresForLicenseConfigurationOperations operation.
            Lists the license configuration operations that failed.
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.ListFailuresForLicenseConfigurationOperationsRequest.LicenseConfigurationArn">
            <summary>
            Gets and sets the property LicenseConfigurationArn. 
            <para>
            Amazon Resource Name of the license configuration.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.ListFailuresForLicenseConfigurationOperationsRequest.MaxResults">
            <summary>
            Gets and sets the property MaxResults. 
            <para>
            Maximum number of results to return in a single call.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.ListFailuresForLicenseConfigurationOperationsRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            Token for the next set of results.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LicenseManager.Model.ListFailuresForLicenseConfigurationOperationsResponse">
            <summary>
            This is the response object from the ListFailuresForLicenseConfigurationOperations operation.
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.ListFailuresForLicenseConfigurationOperationsResponse.LicenseOperationFailureList">
            <summary>
            Gets and sets the property LicenseOperationFailureList. 
            <para>
            License configuration operations that failed.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.ListFailuresForLicenseConfigurationOperationsResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            Token for the next set of results.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LicenseManager.Model.ListLicenseConfigurationsRequest">
            <summary>
            Container for the parameters to the ListLicenseConfigurations operation.
            Lists the license configurations for your account.
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.ListLicenseConfigurationsRequest.Filters">
            <summary>
            Gets and sets the property Filters. 
            <para>
            Filters to scope the results. The following filters and logical operators are supported:
            </para>
             <ul> <li> 
            <para>
             <code>licenseCountingType</code> - The dimension on which licenses are counted (vCPU).
            Logical operators are <code>EQUALS</code> | <code>NOT_EQUALS</code>.
            </para>
             </li> <li> 
            <para>
             <code>enforceLicenseCount</code> - A Boolean value that indicates whether hard license
            enforcement is used. Logical operators are <code>EQUALS</code> | <code>NOT_EQUALS</code>.
            </para>
             </li> <li> 
            <para>
             <code>usagelimitExceeded</code> - A Boolean value that indicates whether the available
            licenses have been exceeded. Logical operators are <code>EQUALS</code> | <code>NOT_EQUALS</code>.
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.ListLicenseConfigurationsRequest.LicenseConfigurationArns">
            <summary>
            Gets and sets the property LicenseConfigurationArns. 
            <para>
            Amazon Resource Names (ARN) of the license configurations.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.ListLicenseConfigurationsRequest.MaxResults">
            <summary>
            Gets and sets the property MaxResults. 
            <para>
            Maximum number of results to return in a single call.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.ListLicenseConfigurationsRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            Token for the next set of results.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LicenseManager.Model.ListLicenseConfigurationsResponse">
            <summary>
            This is the response object from the ListLicenseConfigurations operation.
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.ListLicenseConfigurationsResponse.LicenseConfigurations">
            <summary>
            Gets and sets the property LicenseConfigurations. 
            <para>
            Information about the license configurations.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.ListLicenseConfigurationsResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            Token for the next set of results.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LicenseManager.Model.ListLicenseSpecificationsForResourceRequest">
            <summary>
            Container for the parameters to the ListLicenseSpecificationsForResource operation.
            Describes the license configurations for the specified resource.
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.ListLicenseSpecificationsForResourceRequest.MaxResults">
            <summary>
            Gets and sets the property MaxResults. 
            <para>
            Maximum number of results to return in a single call.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.ListLicenseSpecificationsForResourceRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            Token for the next set of results.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.ListLicenseSpecificationsForResourceRequest.ResourceArn">
            <summary>
            Gets and sets the property ResourceArn. 
            <para>
            Amazon Resource Name (ARN) of a resource that has an associated license configuration.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LicenseManager.Model.ListLicenseSpecificationsForResourceResponse">
            <summary>
            This is the response object from the ListLicenseSpecificationsForResource operation.
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.ListLicenseSpecificationsForResourceResponse.LicenseSpecifications">
            <summary>
            Gets and sets the property LicenseSpecifications. 
            <para>
            License configurations associated with a resource.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.ListLicenseSpecificationsForResourceResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            Token for the next set of results.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LicenseManager.Model.ListResourceInventoryRequest">
            <summary>
            Container for the parameters to the ListResourceInventory operation.
            Lists resources managed using Systems Manager inventory.
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.ListResourceInventoryRequest.Filters">
            <summary>
            Gets and sets the property Filters. 
            <para>
            Filters to scope the results. The following filters and logical operators are supported:
            </para>
             <ul> <li> 
            <para>
             <code>account_id</code> - The ID of the AWS account that owns the resource. Logical
            operators are <code>EQUALS</code> | <code>NOT_EQUALS</code>.
            </para>
             </li> <li> 
            <para>
             <code>application_name</code> - The name of the application. Logical operators are
            <code>EQUALS</code> | <code>BEGINS_WITH</code>.
            </para>
             </li> <li> 
            <para>
             <code>license_included</code> - The type of license included. Logical operators are
            <code>EQUALS</code> | <code>NOT_EQUALS</code>. Possible values are <code>sql-server-enterprise</code>
            | <code>sql-server-standard</code> | <code>sql-server-web</code> | <code>windows-server-datacenter</code>.
            </para>
             </li> <li> 
            <para>
             <code>platform</code> - The platform of the resource. Logical operators are <code>EQUALS</code>
            | <code>BEGINS_WITH</code>.
            </para>
             </li> <li> 
            <para>
             <code>resource_id</code> - The ID of the resource. Logical operators are <code>EQUALS</code>
            | <code>NOT_EQUALS</code>.
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.ListResourceInventoryRequest.MaxResults">
            <summary>
            Gets and sets the property MaxResults. 
            <para>
            Maximum number of results to return in a single call.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.ListResourceInventoryRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            Token for the next set of results.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LicenseManager.Model.ListResourceInventoryResponse">
            <summary>
            This is the response object from the ListResourceInventory operation.
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.ListResourceInventoryResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            Token for the next set of results.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.ListResourceInventoryResponse.ResourceInventoryList">
            <summary>
            Gets and sets the property ResourceInventoryList. 
            <para>
            Information about the resources.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LicenseManager.Model.ListTagsForResourceRequest">
            <summary>
            Container for the parameters to the ListTagsForResource operation.
            Lists the tags for the specified license configuration.
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.ListTagsForResourceRequest.ResourceArn">
            <summary>
            Gets and sets the property ResourceArn. 
            <para>
            Amazon Resource Name (ARN) of the license configuration.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LicenseManager.Model.ListTagsForResourceResponse">
            <summary>
            This is the response object from the ListTagsForResource operation.
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.ListTagsForResourceResponse.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            Information about the tags.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LicenseManager.Model.ListUsageForLicenseConfigurationRequest">
            <summary>
            Container for the parameters to the ListUsageForLicenseConfiguration operation.
            Lists all license usage records for a license configuration, displaying license consumption
            details by resource at a selected point in time. Use this action to audit the current
            license consumption for any license inventory and configuration.
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.ListUsageForLicenseConfigurationRequest.Filters">
            <summary>
            Gets and sets the property Filters. 
            <para>
            Filters to scope the results. The following filters and logical operators are supported:
            </para>
             <ul> <li> 
            <para>
             <code>resourceArn</code> - The ARN of the license configuration resource. Logical
            operators are <code>EQUALS</code> | <code>NOT_EQUALS</code>.
            </para>
             </li> <li> 
            <para>
             <code>resourceType</code> - The resource type (EC2_INSTANCE | EC2_HOST | EC2_AMI
            | SYSTEMS_MANAGER_MANAGED_INSTANCE). Logical operators are <code>EQUALS</code> | <code>NOT_EQUALS</code>.
            </para>
             </li> <li> 
            <para>
             <code>resourceAccount</code> - The ID of the account that owns the resource. Logical
            operators are <code>EQUALS</code> | <code>NOT_EQUALS</code>.
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.ListUsageForLicenseConfigurationRequest.LicenseConfigurationArn">
            <summary>
            Gets and sets the property LicenseConfigurationArn. 
            <para>
            Amazon Resource Name (ARN) of the license configuration.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.ListUsageForLicenseConfigurationRequest.MaxResults">
            <summary>
            Gets and sets the property MaxResults. 
            <para>
            Maximum number of results to return in a single call.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.ListUsageForLicenseConfigurationRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            Token for the next set of results.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LicenseManager.Model.ListUsageForLicenseConfigurationResponse">
            <summary>
            This is the response object from the ListUsageForLicenseConfiguration operation.
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.ListUsageForLicenseConfigurationResponse.LicenseConfigurationUsageList">
            <summary>
            Gets and sets the property LicenseConfigurationUsageList. 
            <para>
            Information about the license configurations.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.ListUsageForLicenseConfigurationResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            Token for the next set of results.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LicenseManager.Model.ManagedResourceSummary">
            <summary>
            Summary information about a managed resource.
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.ManagedResourceSummary.AssociationCount">
            <summary>
            Gets and sets the property AssociationCount. 
            <para>
            Number of resources associated with licenses.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.ManagedResourceSummary.ResourceType">
            <summary>
            Gets and sets the property ResourceType. 
            <para>
            Type of resource associated with a license.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LicenseManager.Model.Metadata">
            <summary>
            Reserved.
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.Metadata.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            Reserved.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.Metadata.Value">
            <summary>
            Gets and sets the property Value. 
            <para>
            Reserved.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LicenseManager.Model.OrganizationConfiguration">
            <summary>
            Configuration information for AWS Organizations.
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.OrganizationConfiguration.EnableIntegration">
            <summary>
            Gets and sets the property EnableIntegration. 
            <para>
            Enables AWS Organization integration.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LicenseManager.Model.ProductInformation">
            <summary>
            Describes product information for a license configuration.
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.ProductInformation.ProductInformationFilterList">
            <summary>
            Gets and sets the property ProductInformationFilterList. 
            <para>
            Product information filters. The following filters and logical operators are supported:
            </para>
             <ul> <li> 
            <para>
             <code>Application Name</code> - The name of the application. Logical operator is
            <code>EQUALS</code>.
            </para>
             </li> <li> 
            <para>
             <code>Application Publisher</code> - The publisher of the application. Logical operator
            is <code>EQUALS</code>.
            </para>
             </li> <li> 
            <para>
             <code>Application Version</code> - The version of the application. Logical operator
            is <code>EQUALS</code>.
            </para>
             </li> <li> 
            <para>
             <code>Platform Name</code> - The name of the platform. Logical operator is <code>EQUALS</code>.
            </para>
             </li> <li> 
            <para>
             <code>Platform Type</code> - The platform type. Logical operator is <code>EQUALS</code>.
            </para>
             </li> <li> 
            <para>
             <code>License Included</code> - The type of license included. Logical operators are
            <code>EQUALS</code> and <code>NOT_EQUALS</code>. Possible values are <code>sql-server-enterprise</code>
            | <code>sql-server-standard</code> | <code>sql-server-web</code> | <code>windows-server-datacenter</code>.
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.ProductInformation.ResourceType">
            <summary>
            Gets and sets the property ResourceType. 
            <para>
            Resource type. The value is <code>SSM_MANAGED</code>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LicenseManager.Model.ProductInformationFilter">
            <summary>
            Describes product information filters.
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.ProductInformationFilter.ProductInformationFilterComparator">
            <summary>
            Gets and sets the property ProductInformationFilterComparator. 
            <para>
            Logical operator.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.ProductInformationFilter.ProductInformationFilterName">
            <summary>
            Gets and sets the property ProductInformationFilterName. 
            <para>
            Filter name.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.ProductInformationFilter.ProductInformationFilterValue">
            <summary>
            Gets and sets the property ProductInformationFilterValue. 
            <para>
            Filter value.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LicenseManager.Model.RateLimitExceededException">
            <summary>
             LicenseManager exception
             </summary>
        </member>
        <member name="M:Amazon.LicenseManager.Model.RateLimitExceededException.#ctor(System.String)">
            <summary>
            Constructs a new RateLimitExceededException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.LicenseManager.Model.RateLimitExceededException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of RateLimitExceededException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.LicenseManager.Model.RateLimitExceededException.#ctor(System.Exception)">
            <summary>
            Construct instance of RateLimitExceededException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.LicenseManager.Model.RateLimitExceededException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of RateLimitExceededException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.LicenseManager.Model.RateLimitExceededException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of RateLimitExceededException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.LicenseManager.Model.ResourceInventory">
            <summary>
            Details about a resource.
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.ResourceInventory.Platform">
            <summary>
            Gets and sets the property Platform. 
            <para>
            Platform of the resource.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.ResourceInventory.PlatformVersion">
            <summary>
            Gets and sets the property PlatformVersion. 
            <para>
            Platform version of the resource in the inventory.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.ResourceInventory.ResourceArn">
            <summary>
            Gets and sets the property ResourceArn. 
            <para>
            Amazon Resource Name (ARN) of the resource.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.ResourceInventory.ResourceId">
            <summary>
            Gets and sets the property ResourceId. 
            <para>
            ID of the resource.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.ResourceInventory.ResourceOwningAccountId">
            <summary>
            Gets and sets the property ResourceOwningAccountId. 
            <para>
            ID of the account that owns the resource.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.ResourceInventory.ResourceType">
            <summary>
            Gets and sets the property ResourceType. 
            <para>
            Type of resource.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LicenseManager.Model.ResourceLimitExceededException">
            <summary>
             LicenseManager exception
             </summary>
        </member>
        <member name="M:Amazon.LicenseManager.Model.ResourceLimitExceededException.#ctor(System.String)">
            <summary>
            Constructs a new ResourceLimitExceededException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.LicenseManager.Model.ResourceLimitExceededException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of ResourceLimitExceededException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.LicenseManager.Model.ResourceLimitExceededException.#ctor(System.Exception)">
            <summary>
            Construct instance of ResourceLimitExceededException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.LicenseManager.Model.ResourceLimitExceededException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ResourceLimitExceededException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.LicenseManager.Model.ResourceLimitExceededException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ResourceLimitExceededException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.LicenseManager.Model.ServerInternalException">
            <summary>
             LicenseManager exception
             </summary>
        </member>
        <member name="M:Amazon.LicenseManager.Model.ServerInternalException.#ctor(System.String)">
            <summary>
            Constructs a new ServerInternalException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.LicenseManager.Model.ServerInternalException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of ServerInternalException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.LicenseManager.Model.ServerInternalException.#ctor(System.Exception)">
            <summary>
            Construct instance of ServerInternalException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.LicenseManager.Model.ServerInternalException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ServerInternalException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.LicenseManager.Model.ServerInternalException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ServerInternalException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.LicenseManager.Model.Tag">
            <summary>
            Details about a tag for a license configuration.
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.Tag.Key">
            <summary>
            Gets and sets the property Key. 
            <para>
            Tag key.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.Tag.Value">
            <summary>
            Gets and sets the property Value. 
            <para>
            Tag value.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LicenseManager.Model.TagResourceRequest">
            <summary>
            Container for the parameters to the TagResource operation.
            Adds the specified tags to the specified license configuration.
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.TagResourceRequest.ResourceArn">
            <summary>
            Gets and sets the property ResourceArn. 
            <para>
            Amazon Resource Name (ARN) of the license configuration.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.TagResourceRequest.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            One or more tags.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LicenseManager.Model.TagResourceResponse">
            <summary>
            This is the response object from the TagResource operation.
            </summary>
        </member>
        <member name="T:Amazon.LicenseManager.Model.UntagResourceRequest">
            <summary>
            Container for the parameters to the UntagResource operation.
            Removes the specified tags from the specified license configuration.
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.UntagResourceRequest.ResourceArn">
            <summary>
            Gets and sets the property ResourceArn. 
            <para>
            Amazon Resource Name (ARN) of the license configuration.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.UntagResourceRequest.TagKeys">
            <summary>
            Gets and sets the property TagKeys. 
            <para>
            Keys identifying the tags to remove.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LicenseManager.Model.UntagResourceResponse">
            <summary>
            This is the response object from the UntagResource operation.
            </summary>
        </member>
        <member name="T:Amazon.LicenseManager.Model.UpdateLicenseConfigurationRequest">
            <summary>
            Container for the parameters to the UpdateLicenseConfiguration operation.
            Modifies the attributes of an existing license configuration.
            
             
            <para>
            A license configuration is an abstraction of a customer license agreement that can
            be consumed and enforced by License Manager. Components include specifications for
            the license type (licensing by instance, socket, CPU, or vCPU), allowed tenancy (shared
            tenancy, Dedicated Instance, Dedicated Host, or all of these), host affinity (how
            long a VM must be associated with a host), and the number of licenses purchased and
            used.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.UpdateLicenseConfigurationRequest.Description">
            <summary>
            Gets and sets the property Description. 
            <para>
            New description of the license configuration.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.UpdateLicenseConfigurationRequest.LicenseConfigurationArn">
            <summary>
            Gets and sets the property LicenseConfigurationArn. 
            <para>
            Amazon Resource Name (ARN) of the license configuration.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.UpdateLicenseConfigurationRequest.LicenseConfigurationStatus">
            <summary>
            Gets and sets the property LicenseConfigurationStatus. 
            <para>
            New status of the license configuration.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.UpdateLicenseConfigurationRequest.LicenseCount">
            <summary>
            Gets and sets the property LicenseCount. 
            <para>
            New number of licenses managed by the license configuration.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.UpdateLicenseConfigurationRequest.LicenseCountHardLimit">
            <summary>
            Gets and sets the property LicenseCountHardLimit. 
            <para>
            New hard limit of the number of available licenses.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.UpdateLicenseConfigurationRequest.LicenseRules">
            <summary>
            Gets and sets the property LicenseRules. 
            <para>
            New license rules.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.UpdateLicenseConfigurationRequest.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            New name of the license configuration.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.UpdateLicenseConfigurationRequest.ProductInformationList">
            <summary>
            Gets and sets the property ProductInformationList. 
            <para>
            New product information.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LicenseManager.Model.UpdateLicenseConfigurationResponse">
            <summary>
            This is the response object from the UpdateLicenseConfiguration operation.
            </summary>
        </member>
        <member name="T:Amazon.LicenseManager.Model.UpdateLicenseSpecificationsForResourceRequest">
            <summary>
            Container for the parameters to the UpdateLicenseSpecificationsForResource operation.
            Adds or removes the specified license configurations for the specified AWS resource.
            
             
            <para>
            You can update the license specifications of AMIs, instances, and hosts. You cannot
            update the license specifications for launch templates and AWS CloudFormation templates,
            as they send license configurations to the operation that creates the resource.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.UpdateLicenseSpecificationsForResourceRequest.AddLicenseSpecifications">
            <summary>
            Gets and sets the property AddLicenseSpecifications. 
            <para>
            ARNs of the license configurations to add.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.UpdateLicenseSpecificationsForResourceRequest.RemoveLicenseSpecifications">
            <summary>
            Gets and sets the property RemoveLicenseSpecifications. 
            <para>
            ARNs of the license configurations to remove.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.UpdateLicenseSpecificationsForResourceRequest.ResourceArn">
            <summary>
            Gets and sets the property ResourceArn. 
            <para>
            Amazon Resource Name (ARN) of the AWS resource.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LicenseManager.Model.UpdateLicenseSpecificationsForResourceResponse">
            <summary>
            This is the response object from the UpdateLicenseSpecificationsForResource operation.
            </summary>
        </member>
        <member name="T:Amazon.LicenseManager.Model.UpdateServiceSettingsRequest">
            <summary>
            Container for the parameters to the UpdateServiceSettings operation.
            Updates License Manager settings for the current Region.
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.UpdateServiceSettingsRequest.EnableCrossAccountsDiscovery">
            <summary>
            Gets and sets the property EnableCrossAccountsDiscovery. 
            <para>
            Activates cross-account discovery.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.UpdateServiceSettingsRequest.OrganizationConfiguration">
            <summary>
            Gets and sets the property OrganizationConfiguration. 
            <para>
            Enables integration with AWS Organizations for cross-account discovery.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.UpdateServiceSettingsRequest.S3BucketArn">
            <summary>
            Gets and sets the property S3BucketArn. 
            <para>
            Amazon Resource Name (ARN) of the Amazon S3 bucket where the License Manager information
            is stored.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.Model.UpdateServiceSettingsRequest.SnsTopicArn">
            <summary>
            Gets and sets the property SnsTopicArn. 
            <para>
            Amazon Resource Name (ARN) of the Amazon SNS topic used for License Manager alerts.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LicenseManager.Model.UpdateServiceSettingsResponse">
            <summary>
            This is the response object from the UpdateServiceSettings operation.
            </summary>
        </member>
        <member name="T:Amazon.LicenseManager.AmazonLicenseManagerRequest">
            <summary>
            Base class for LicenseManager operation requests.
            </summary>
        </member>
        <member name="T:Amazon.LicenseManager.InventoryFilterCondition">
            <summary>
            Constants used for properties of type InventoryFilterCondition.
            </summary>
        </member>
        <member name="F:Amazon.LicenseManager.InventoryFilterCondition.BEGINS_WITH">
            <summary>
            Constant BEGINS_WITH for InventoryFilterCondition
            </summary>
        </member>
        <member name="F:Amazon.LicenseManager.InventoryFilterCondition.CONTAINS">
            <summary>
            Constant CONTAINS for InventoryFilterCondition
            </summary>
        </member>
        <member name="F:Amazon.LicenseManager.InventoryFilterCondition.EQUALS">
            <summary>
            Constant EQUALS for InventoryFilterCondition
            </summary>
        </member>
        <member name="F:Amazon.LicenseManager.InventoryFilterCondition.NOT_EQUALS">
            <summary>
            Constant NOT_EQUALS for InventoryFilterCondition
            </summary>
        </member>
        <member name="M:Amazon.LicenseManager.InventoryFilterCondition.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.LicenseManager.InventoryFilterCondition.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.LicenseManager.InventoryFilterCondition.op_Implicit(System.String)~Amazon.LicenseManager.InventoryFilterCondition">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.LicenseManager.LicenseConfigurationStatus">
            <summary>
            Constants used for properties of type LicenseConfigurationStatus.
            </summary>
        </member>
        <member name="F:Amazon.LicenseManager.LicenseConfigurationStatus.AVAILABLE">
            <summary>
            Constant AVAILABLE for LicenseConfigurationStatus
            </summary>
        </member>
        <member name="F:Amazon.LicenseManager.LicenseConfigurationStatus.DISABLED">
            <summary>
            Constant DISABLED for LicenseConfigurationStatus
            </summary>
        </member>
        <member name="M:Amazon.LicenseManager.LicenseConfigurationStatus.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.LicenseManager.LicenseConfigurationStatus.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.LicenseManager.LicenseConfigurationStatus.op_Implicit(System.String)~Amazon.LicenseManager.LicenseConfigurationStatus">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.LicenseManager.LicenseCountingType">
            <summary>
            Constants used for properties of type LicenseCountingType.
            </summary>
        </member>
        <member name="F:Amazon.LicenseManager.LicenseCountingType.Core">
            <summary>
            Constant Core for LicenseCountingType
            </summary>
        </member>
        <member name="F:Amazon.LicenseManager.LicenseCountingType.Instance">
            <summary>
            Constant Instance for LicenseCountingType
            </summary>
        </member>
        <member name="F:Amazon.LicenseManager.LicenseCountingType.Socket">
            <summary>
            Constant Socket for LicenseCountingType
            </summary>
        </member>
        <member name="F:Amazon.LicenseManager.LicenseCountingType.VCPU">
            <summary>
            Constant VCPU for LicenseCountingType
            </summary>
        </member>
        <member name="M:Amazon.LicenseManager.LicenseCountingType.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.LicenseManager.LicenseCountingType.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.LicenseManager.LicenseCountingType.op_Implicit(System.String)~Amazon.LicenseManager.LicenseCountingType">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.LicenseManager.ResourceType">
            <summary>
            Constants used for properties of type ResourceType.
            </summary>
        </member>
        <member name="F:Amazon.LicenseManager.ResourceType.EC2_AMI">
            <summary>
            Constant EC2_AMI for ResourceType
            </summary>
        </member>
        <member name="F:Amazon.LicenseManager.ResourceType.EC2_HOST">
            <summary>
            Constant EC2_HOST for ResourceType
            </summary>
        </member>
        <member name="F:Amazon.LicenseManager.ResourceType.EC2_INSTANCE">
            <summary>
            Constant EC2_INSTANCE for ResourceType
            </summary>
        </member>
        <member name="F:Amazon.LicenseManager.ResourceType.RDS">
            <summary>
            Constant RDS for ResourceType
            </summary>
        </member>
        <member name="F:Amazon.LicenseManager.ResourceType.SYSTEMS_MANAGER_MANAGED_INSTANCE">
            <summary>
            Constant SYSTEMS_MANAGER_MANAGED_INSTANCE for ResourceType
            </summary>
        </member>
        <member name="M:Amazon.LicenseManager.ResourceType.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.LicenseManager.ResourceType.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.LicenseManager.ResourceType.op_Implicit(System.String)~Amazon.LicenseManager.ResourceType">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.LicenseManager.AmazonLicenseManagerClient">
             <summary>
             Implementation for accessing LicenseManager
            
             AWS License Manager  
             <para>
             AWS License Manager makes it easier to manage licenses from software vendors across
             multiple AWS accounts and on-premises servers.
             </para>
             </summary>
        </member>
        <member name="M:Amazon.LicenseManager.AmazonLicenseManagerClient.#ctor">
             <summary>
             Constructs AmazonLicenseManagerClient with the credentials loaded from the application's
             default configuration, and if unsuccessful from the Instance Profile service on an EC2 instance.
             
             Example App.config with credentials set. 
             <code>
             &lt;?xml version="1.0" encoding="utf-8" ?&gt;
             &lt;configuration&gt;
                 &lt;appSettings&gt;
                     &lt;add key="AWSProfileName" value="AWS Default"/&gt;
                 &lt;/appSettings&gt;
             &lt;/configuration&gt;
             </code>
            
             </summary>
        </member>
        <member name="M:Amazon.LicenseManager.AmazonLicenseManagerClient.#ctor(Amazon.RegionEndpoint)">
             <summary>
             Constructs AmazonLicenseManagerClient with the credentials loaded from the application's
             default configuration, and if unsuccessful from the Instance Profile service on an EC2 instance.
             
             Example App.config with credentials set. 
             <code>
             &lt;?xml version="1.0" encoding="utf-8" ?&gt;
             &lt;configuration&gt;
                 &lt;appSettings&gt;
                     &lt;add key="AWSProfileName" value="AWS Default"/&gt;
                 &lt;/appSettings&gt;
             &lt;/configuration&gt;
             </code>
            
             </summary>
             <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.LicenseManager.AmazonLicenseManagerClient.#ctor(Amazon.LicenseManager.AmazonLicenseManagerConfig)">
             <summary>
             Constructs AmazonLicenseManagerClient with the credentials loaded from the application's
             default configuration, and if unsuccessful from the Instance Profile service on an EC2 instance.
             
             Example App.config with credentials set. 
             <code>
             &lt;?xml version="1.0" encoding="utf-8" ?&gt;
             &lt;configuration&gt;
                 &lt;appSettings&gt;
                     &lt;add key="AWSProfileName" value="AWS Default"/&gt;
                 &lt;/appSettings&gt;
             &lt;/configuration&gt;
             </code>
            
             </summary>
             <param name="config">The AmazonLicenseManagerClient Configuration Object</param>
        </member>
        <member name="M:Amazon.LicenseManager.AmazonLicenseManagerClient.#ctor(Amazon.Runtime.AWSCredentials)">
            <summary>
            Constructs AmazonLicenseManagerClient with AWS Credentials
            </summary>
            <param name="credentials">AWS Credentials</param>
        </member>
        <member name="M:Amazon.LicenseManager.AmazonLicenseManagerClient.#ctor(Amazon.Runtime.AWSCredentials,Amazon.RegionEndpoint)">
            <summary>
            Constructs AmazonLicenseManagerClient with AWS Credentials
            </summary>
            <param name="credentials">AWS Credentials</param>
            <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.LicenseManager.AmazonLicenseManagerClient.#ctor(Amazon.Runtime.AWSCredentials,Amazon.LicenseManager.AmazonLicenseManagerConfig)">
            <summary>
            Constructs AmazonLicenseManagerClient with AWS Credentials and an
            AmazonLicenseManagerClient Configuration object.
            </summary>
            <param name="credentials">AWS Credentials</param>
            <param name="clientConfig">The AmazonLicenseManagerClient Configuration Object</param>
        </member>
        <member name="M:Amazon.LicenseManager.AmazonLicenseManagerClient.#ctor(System.String,System.String)">
            <summary>
            Constructs AmazonLicenseManagerClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
        </member>
        <member name="M:Amazon.LicenseManager.AmazonLicenseManagerClient.#ctor(System.String,System.String,Amazon.RegionEndpoint)">
            <summary>
            Constructs AmazonLicenseManagerClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.LicenseManager.AmazonLicenseManagerClient.#ctor(System.String,System.String,Amazon.LicenseManager.AmazonLicenseManagerConfig)">
            <summary>
            Constructs AmazonLicenseManagerClient with AWS Access Key ID, AWS Secret Key and an
            AmazonLicenseManagerClient Configuration object. 
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="clientConfig">The AmazonLicenseManagerClient Configuration Object</param>
        </member>
        <member name="M:Amazon.LicenseManager.AmazonLicenseManagerClient.#ctor(System.String,System.String,System.String)">
            <summary>
            Constructs AmazonLicenseManagerClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="awsSessionToken">AWS Session Token</param>
        </member>
        <member name="M:Amazon.LicenseManager.AmazonLicenseManagerClient.#ctor(System.String,System.String,System.String,Amazon.RegionEndpoint)">
            <summary>
            Constructs AmazonLicenseManagerClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="awsSessionToken">AWS Session Token</param>
            <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.LicenseManager.AmazonLicenseManagerClient.#ctor(System.String,System.String,System.String,Amazon.LicenseManager.AmazonLicenseManagerConfig)">
            <summary>
            Constructs AmazonLicenseManagerClient with AWS Access Key ID, AWS Secret Key and an
            AmazonLicenseManagerClient Configuration object. 
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="awsSessionToken">AWS Session Token</param>
            <param name="clientConfig">The AmazonLicenseManagerClient Configuration Object</param>
        </member>
        <member name="M:Amazon.LicenseManager.AmazonLicenseManagerClient.CreateSigner">
            <summary>
            Creates the signer for the service.
            </summary>
        </member>
        <member name="P:Amazon.LicenseManager.AmazonLicenseManagerClient.ServiceMetadata">
            <summary>
            Capture metadata for the service.
            </summary>
        </member>
        <member name="M:Amazon.LicenseManager.AmazonLicenseManagerClient.Dispose(System.Boolean)">
            <summary>
            Disposes the service client.
            </summary>
        </member>
        <member name="M:Amazon.LicenseManager.AmazonLicenseManagerClient.CreateLicenseConfigurationAsync(Amazon.LicenseManager.Model.CreateLicenseConfigurationRequest,System.Threading.CancellationToken)">
            <summary>
            Creates a license configuration.
            
             
            <para>
            A license configuration is an abstraction of a customer license agreement that can
            be consumed and enforced by License Manager. Components include specifications for
            the license type (licensing by instance, socket, CPU, or vCPU), allowed tenancy (shared
            tenancy, Dedicated Instance, Dedicated Host, or all of these), host affinity (how
            long a VM must be associated with a host), and the number of licenses purchased and
            used.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateLicenseConfiguration service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CreateLicenseConfiguration service method, as returned by LicenseManager.</returns>
            <exception cref="T:Amazon.LicenseManager.Model.AccessDeniedException">
            Access to resource denied.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.AuthorizationException">
            The AWS user account does not have permission to perform the action. Check the IAM
            policy associated with this account.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.InvalidParameterValueException">
            One or more parameter values are not valid.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.RateLimitExceededException">
            Too many requests have been submitted. Try again after a brief wait.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ResourceLimitExceededException">
            Your resource limits have been exceeded.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ServerInternalException">
            The server experienced an internal error. Try again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/license-manager-2018-08-01/CreateLicenseConfiguration">REST API Reference for CreateLicenseConfiguration Operation</seealso>
        </member>
        <member name="M:Amazon.LicenseManager.AmazonLicenseManagerClient.DeleteLicenseConfigurationAsync(Amazon.LicenseManager.Model.DeleteLicenseConfigurationRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes the specified license configuration.
            
             
            <para>
            You cannot delete a license configuration that is in use.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteLicenseConfiguration service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteLicenseConfiguration service method, as returned by LicenseManager.</returns>
            <exception cref="T:Amazon.LicenseManager.Model.AccessDeniedException">
            Access to resource denied.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.AuthorizationException">
            The AWS user account does not have permission to perform the action. Check the IAM
            policy associated with this account.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.InvalidParameterValueException">
            One or more parameter values are not valid.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.RateLimitExceededException">
            Too many requests have been submitted. Try again after a brief wait.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ServerInternalException">
            The server experienced an internal error. Try again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/license-manager-2018-08-01/DeleteLicenseConfiguration">REST API Reference for DeleteLicenseConfiguration Operation</seealso>
        </member>
        <member name="M:Amazon.LicenseManager.AmazonLicenseManagerClient.GetLicenseConfigurationAsync(Amazon.LicenseManager.Model.GetLicenseConfigurationRequest,System.Threading.CancellationToken)">
            <summary>
            Gets detailed information about the specified license configuration.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetLicenseConfiguration service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetLicenseConfiguration service method, as returned by LicenseManager.</returns>
            <exception cref="T:Amazon.LicenseManager.Model.AccessDeniedException">
            Access to resource denied.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.AuthorizationException">
            The AWS user account does not have permission to perform the action. Check the IAM
            policy associated with this account.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.InvalidParameterValueException">
            One or more parameter values are not valid.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.RateLimitExceededException">
            Too many requests have been submitted. Try again after a brief wait.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ServerInternalException">
            The server experienced an internal error. Try again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/license-manager-2018-08-01/GetLicenseConfiguration">REST API Reference for GetLicenseConfiguration Operation</seealso>
        </member>
        <member name="M:Amazon.LicenseManager.AmazonLicenseManagerClient.GetServiceSettingsAsync(Amazon.LicenseManager.Model.GetServiceSettingsRequest,System.Threading.CancellationToken)">
            <summary>
            Gets the License Manager settings for the current Region.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetServiceSettings service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetServiceSettings service method, as returned by LicenseManager.</returns>
            <exception cref="T:Amazon.LicenseManager.Model.AccessDeniedException">
            Access to resource denied.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.AuthorizationException">
            The AWS user account does not have permission to perform the action. Check the IAM
            policy associated with this account.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.RateLimitExceededException">
            Too many requests have been submitted. Try again after a brief wait.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ServerInternalException">
            The server experienced an internal error. Try again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/license-manager-2018-08-01/GetServiceSettings">REST API Reference for GetServiceSettings Operation</seealso>
        </member>
        <member name="M:Amazon.LicenseManager.AmazonLicenseManagerClient.ListAssociationsForLicenseConfigurationAsync(Amazon.LicenseManager.Model.ListAssociationsForLicenseConfigurationRequest,System.Threading.CancellationToken)">
            <summary>
            Lists the resource associations for the specified license configuration.
            
             
            <para>
            Resource associations need not consume licenses from a license configuration. For
            example, an AMI or a stopped instance might not consume a license (depending on the
            license rules).
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListAssociationsForLicenseConfiguration service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListAssociationsForLicenseConfiguration service method, as returned by LicenseManager.</returns>
            <exception cref="T:Amazon.LicenseManager.Model.AccessDeniedException">
            Access to resource denied.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.AuthorizationException">
            The AWS user account does not have permission to perform the action. Check the IAM
            policy associated with this account.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.FilterLimitExceededException">
            The request uses too many filters or too many filter values.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.InvalidParameterValueException">
            One or more parameter values are not valid.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.RateLimitExceededException">
            Too many requests have been submitted. Try again after a brief wait.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ServerInternalException">
            The server experienced an internal error. Try again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/license-manager-2018-08-01/ListAssociationsForLicenseConfiguration">REST API Reference for ListAssociationsForLicenseConfiguration Operation</seealso>
        </member>
        <member name="M:Amazon.LicenseManager.AmazonLicenseManagerClient.ListFailuresForLicenseConfigurationOperationsAsync(Amazon.LicenseManager.Model.ListFailuresForLicenseConfigurationOperationsRequest,System.Threading.CancellationToken)">
            <summary>
            Lists the license configuration operations that failed.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListFailuresForLicenseConfigurationOperations service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListFailuresForLicenseConfigurationOperations service method, as returned by LicenseManager.</returns>
            <exception cref="T:Amazon.LicenseManager.Model.AccessDeniedException">
            Access to resource denied.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.AuthorizationException">
            The AWS user account does not have permission to perform the action. Check the IAM
            policy associated with this account.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.InvalidParameterValueException">
            One or more parameter values are not valid.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.RateLimitExceededException">
            Too many requests have been submitted. Try again after a brief wait.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ServerInternalException">
            The server experienced an internal error. Try again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/license-manager-2018-08-01/ListFailuresForLicenseConfigurationOperations">REST API Reference for ListFailuresForLicenseConfigurationOperations Operation</seealso>
        </member>
        <member name="M:Amazon.LicenseManager.AmazonLicenseManagerClient.ListLicenseConfigurationsAsync(Amazon.LicenseManager.Model.ListLicenseConfigurationsRequest,System.Threading.CancellationToken)">
            <summary>
            Lists the license configurations for your account.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListLicenseConfigurations service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListLicenseConfigurations service method, as returned by LicenseManager.</returns>
            <exception cref="T:Amazon.LicenseManager.Model.AccessDeniedException">
            Access to resource denied.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.AuthorizationException">
            The AWS user account does not have permission to perform the action. Check the IAM
            policy associated with this account.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.FilterLimitExceededException">
            The request uses too many filters or too many filter values.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.InvalidParameterValueException">
            One or more parameter values are not valid.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.RateLimitExceededException">
            Too many requests have been submitted. Try again after a brief wait.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ServerInternalException">
            The server experienced an internal error. Try again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/license-manager-2018-08-01/ListLicenseConfigurations">REST API Reference for ListLicenseConfigurations Operation</seealso>
        </member>
        <member name="M:Amazon.LicenseManager.AmazonLicenseManagerClient.ListLicenseSpecificationsForResourceAsync(Amazon.LicenseManager.Model.ListLicenseSpecificationsForResourceRequest,System.Threading.CancellationToken)">
            <summary>
            Describes the license configurations for the specified resource.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListLicenseSpecificationsForResource service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListLicenseSpecificationsForResource service method, as returned by LicenseManager.</returns>
            <exception cref="T:Amazon.LicenseManager.Model.AccessDeniedException">
            Access to resource denied.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.AuthorizationException">
            The AWS user account does not have permission to perform the action. Check the IAM
            policy associated with this account.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.InvalidParameterValueException">
            One or more parameter values are not valid.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.RateLimitExceededException">
            Too many requests have been submitted. Try again after a brief wait.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ServerInternalException">
            The server experienced an internal error. Try again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/license-manager-2018-08-01/ListLicenseSpecificationsForResource">REST API Reference for ListLicenseSpecificationsForResource Operation</seealso>
        </member>
        <member name="M:Amazon.LicenseManager.AmazonLicenseManagerClient.ListResourceInventoryAsync(Amazon.LicenseManager.Model.ListResourceInventoryRequest,System.Threading.CancellationToken)">
            <summary>
            Lists resources managed using Systems Manager inventory.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListResourceInventory service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListResourceInventory service method, as returned by LicenseManager.</returns>
            <exception cref="T:Amazon.LicenseManager.Model.AccessDeniedException">
            Access to resource denied.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.AuthorizationException">
            The AWS user account does not have permission to perform the action. Check the IAM
            policy associated with this account.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.FailedDependencyException">
            A dependency required to run the API is missing.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.FilterLimitExceededException">
            The request uses too many filters or too many filter values.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.InvalidParameterValueException">
            One or more parameter values are not valid.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.RateLimitExceededException">
            Too many requests have been submitted. Try again after a brief wait.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ServerInternalException">
            The server experienced an internal error. Try again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/license-manager-2018-08-01/ListResourceInventory">REST API Reference for ListResourceInventory Operation</seealso>
        </member>
        <member name="M:Amazon.LicenseManager.AmazonLicenseManagerClient.ListTagsForResourceAsync(Amazon.LicenseManager.Model.ListTagsForResourceRequest,System.Threading.CancellationToken)">
            <summary>
            Lists the tags for the specified license configuration.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListTagsForResource service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListTagsForResource service method, as returned by LicenseManager.</returns>
            <exception cref="T:Amazon.LicenseManager.Model.AccessDeniedException">
            Access to resource denied.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.AuthorizationException">
            The AWS user account does not have permission to perform the action. Check the IAM
            policy associated with this account.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.InvalidParameterValueException">
            One or more parameter values are not valid.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.RateLimitExceededException">
            Too many requests have been submitted. Try again after a brief wait.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ServerInternalException">
            The server experienced an internal error. Try again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/license-manager-2018-08-01/ListTagsForResource">REST API Reference for ListTagsForResource Operation</seealso>
        </member>
        <member name="M:Amazon.LicenseManager.AmazonLicenseManagerClient.ListUsageForLicenseConfigurationAsync(Amazon.LicenseManager.Model.ListUsageForLicenseConfigurationRequest,System.Threading.CancellationToken)">
            <summary>
            Lists all license usage records for a license configuration, displaying license consumption
            details by resource at a selected point in time. Use this action to audit the current
            license consumption for any license inventory and configuration.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListUsageForLicenseConfiguration service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListUsageForLicenseConfiguration service method, as returned by LicenseManager.</returns>
            <exception cref="T:Amazon.LicenseManager.Model.AccessDeniedException">
            Access to resource denied.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.AuthorizationException">
            The AWS user account does not have permission to perform the action. Check the IAM
            policy associated with this account.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.FilterLimitExceededException">
            The request uses too many filters or too many filter values.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.InvalidParameterValueException">
            One or more parameter values are not valid.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.RateLimitExceededException">
            Too many requests have been submitted. Try again after a brief wait.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ServerInternalException">
            The server experienced an internal error. Try again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/license-manager-2018-08-01/ListUsageForLicenseConfiguration">REST API Reference for ListUsageForLicenseConfiguration Operation</seealso>
        </member>
        <member name="M:Amazon.LicenseManager.AmazonLicenseManagerClient.TagResourceAsync(Amazon.LicenseManager.Model.TagResourceRequest,System.Threading.CancellationToken)">
            <summary>
            Adds the specified tags to the specified license configuration.
            </summary>
            <param name="request">Container for the necessary parameters to execute the TagResource service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the TagResource service method, as returned by LicenseManager.</returns>
            <exception cref="T:Amazon.LicenseManager.Model.AccessDeniedException">
            Access to resource denied.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.AuthorizationException">
            The AWS user account does not have permission to perform the action. Check the IAM
            policy associated with this account.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.InvalidParameterValueException">
            One or more parameter values are not valid.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.RateLimitExceededException">
            Too many requests have been submitted. Try again after a brief wait.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ServerInternalException">
            The server experienced an internal error. Try again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/license-manager-2018-08-01/TagResource">REST API Reference for TagResource Operation</seealso>
        </member>
        <member name="M:Amazon.LicenseManager.AmazonLicenseManagerClient.UntagResourceAsync(Amazon.LicenseManager.Model.UntagResourceRequest,System.Threading.CancellationToken)">
            <summary>
            Removes the specified tags from the specified license configuration.
            </summary>
            <param name="request">Container for the necessary parameters to execute the UntagResource service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UntagResource service method, as returned by LicenseManager.</returns>
            <exception cref="T:Amazon.LicenseManager.Model.AccessDeniedException">
            Access to resource denied.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.AuthorizationException">
            The AWS user account does not have permission to perform the action. Check the IAM
            policy associated with this account.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.InvalidParameterValueException">
            One or more parameter values are not valid.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.RateLimitExceededException">
            Too many requests have been submitted. Try again after a brief wait.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ServerInternalException">
            The server experienced an internal error. Try again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/license-manager-2018-08-01/UntagResource">REST API Reference for UntagResource Operation</seealso>
        </member>
        <member name="M:Amazon.LicenseManager.AmazonLicenseManagerClient.UpdateLicenseConfigurationAsync(Amazon.LicenseManager.Model.UpdateLicenseConfigurationRequest,System.Threading.CancellationToken)">
            <summary>
            Modifies the attributes of an existing license configuration.
            
             
            <para>
            A license configuration is an abstraction of a customer license agreement that can
            be consumed and enforced by License Manager. Components include specifications for
            the license type (licensing by instance, socket, CPU, or vCPU), allowed tenancy (shared
            tenancy, Dedicated Instance, Dedicated Host, or all of these), host affinity (how
            long a VM must be associated with a host), and the number of licenses purchased and
            used.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateLicenseConfiguration service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UpdateLicenseConfiguration service method, as returned by LicenseManager.</returns>
            <exception cref="T:Amazon.LicenseManager.Model.AccessDeniedException">
            Access to resource denied.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.AuthorizationException">
            The AWS user account does not have permission to perform the action. Check the IAM
            policy associated with this account.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.InvalidParameterValueException">
            One or more parameter values are not valid.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.RateLimitExceededException">
            Too many requests have been submitted. Try again after a brief wait.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ServerInternalException">
            The server experienced an internal error. Try again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/license-manager-2018-08-01/UpdateLicenseConfiguration">REST API Reference for UpdateLicenseConfiguration Operation</seealso>
        </member>
        <member name="M:Amazon.LicenseManager.AmazonLicenseManagerClient.UpdateLicenseSpecificationsForResourceAsync(Amazon.LicenseManager.Model.UpdateLicenseSpecificationsForResourceRequest,System.Threading.CancellationToken)">
            <summary>
            Adds or removes the specified license configurations for the specified AWS resource.
            
             
            <para>
            You can update the license specifications of AMIs, instances, and hosts. You cannot
            update the license specifications for launch templates and AWS CloudFormation templates,
            as they send license configurations to the operation that creates the resource.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateLicenseSpecificationsForResource service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UpdateLicenseSpecificationsForResource service method, as returned by LicenseManager.</returns>
            <exception cref="T:Amazon.LicenseManager.Model.AccessDeniedException">
            Access to resource denied.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.AuthorizationException">
            The AWS user account does not have permission to perform the action. Check the IAM
            policy associated with this account.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.InvalidParameterValueException">
            One or more parameter values are not valid.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.InvalidResourceStateException">
            License Manager cannot allocate a license to a resource because of its state. 
            
             
            <para>
            For example, you cannot allocate a license to an instance in the process of shutting
            down.
            </para>
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.LicenseUsageException">
            You do not have enough licenses available to support a new resource launch.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.RateLimitExceededException">
            Too many requests have been submitted. Try again after a brief wait.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ServerInternalException">
            The server experienced an internal error. Try again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/license-manager-2018-08-01/UpdateLicenseSpecificationsForResource">REST API Reference for UpdateLicenseSpecificationsForResource Operation</seealso>
        </member>
        <member name="M:Amazon.LicenseManager.AmazonLicenseManagerClient.UpdateServiceSettingsAsync(Amazon.LicenseManager.Model.UpdateServiceSettingsRequest,System.Threading.CancellationToken)">
            <summary>
            Updates License Manager settings for the current Region.
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateServiceSettings service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UpdateServiceSettings service method, as returned by LicenseManager.</returns>
            <exception cref="T:Amazon.LicenseManager.Model.AccessDeniedException">
            Access to resource denied.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.AuthorizationException">
            The AWS user account does not have permission to perform the action. Check the IAM
            policy associated with this account.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.InvalidParameterValueException">
            One or more parameter values are not valid.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.RateLimitExceededException">
            Too many requests have been submitted. Try again after a brief wait.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ServerInternalException">
            The server experienced an internal error. Try again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/license-manager-2018-08-01/UpdateServiceSettings">REST API Reference for UpdateServiceSettings Operation</seealso>
        </member>
        <member name="T:Amazon.LicenseManager.IAmazonLicenseManager">
             <summary>
             Interface for accessing LicenseManager
            
             AWS License Manager  
             <para>
             AWS License Manager makes it easier to manage licenses from software vendors across
             multiple AWS accounts and on-premises servers.
             </para>
             </summary>
        </member>
        <member name="M:Amazon.LicenseManager.IAmazonLicenseManager.CreateLicenseConfigurationAsync(Amazon.LicenseManager.Model.CreateLicenseConfigurationRequest,System.Threading.CancellationToken)">
            <summary>
            Creates a license configuration.
            
             
            <para>
            A license configuration is an abstraction of a customer license agreement that can
            be consumed and enforced by License Manager. Components include specifications for
            the license type (licensing by instance, socket, CPU, or vCPU), allowed tenancy (shared
            tenancy, Dedicated Instance, Dedicated Host, or all of these), host affinity (how
            long a VM must be associated with a host), and the number of licenses purchased and
            used.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateLicenseConfiguration service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CreateLicenseConfiguration service method, as returned by LicenseManager.</returns>
            <exception cref="T:Amazon.LicenseManager.Model.AccessDeniedException">
            Access to resource denied.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.AuthorizationException">
            The AWS user account does not have permission to perform the action. Check the IAM
            policy associated with this account.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.InvalidParameterValueException">
            One or more parameter values are not valid.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.RateLimitExceededException">
            Too many requests have been submitted. Try again after a brief wait.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ResourceLimitExceededException">
            Your resource limits have been exceeded.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ServerInternalException">
            The server experienced an internal error. Try again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/license-manager-2018-08-01/CreateLicenseConfiguration">REST API Reference for CreateLicenseConfiguration Operation</seealso>
        </member>
        <member name="M:Amazon.LicenseManager.IAmazonLicenseManager.DeleteLicenseConfigurationAsync(Amazon.LicenseManager.Model.DeleteLicenseConfigurationRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes the specified license configuration.
            
             
            <para>
            You cannot delete a license configuration that is in use.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteLicenseConfiguration service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteLicenseConfiguration service method, as returned by LicenseManager.</returns>
            <exception cref="T:Amazon.LicenseManager.Model.AccessDeniedException">
            Access to resource denied.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.AuthorizationException">
            The AWS user account does not have permission to perform the action. Check the IAM
            policy associated with this account.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.InvalidParameterValueException">
            One or more parameter values are not valid.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.RateLimitExceededException">
            Too many requests have been submitted. Try again after a brief wait.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ServerInternalException">
            The server experienced an internal error. Try again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/license-manager-2018-08-01/DeleteLicenseConfiguration">REST API Reference for DeleteLicenseConfiguration Operation</seealso>
        </member>
        <member name="M:Amazon.LicenseManager.IAmazonLicenseManager.GetLicenseConfigurationAsync(Amazon.LicenseManager.Model.GetLicenseConfigurationRequest,System.Threading.CancellationToken)">
            <summary>
            Gets detailed information about the specified license configuration.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetLicenseConfiguration service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetLicenseConfiguration service method, as returned by LicenseManager.</returns>
            <exception cref="T:Amazon.LicenseManager.Model.AccessDeniedException">
            Access to resource denied.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.AuthorizationException">
            The AWS user account does not have permission to perform the action. Check the IAM
            policy associated with this account.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.InvalidParameterValueException">
            One or more parameter values are not valid.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.RateLimitExceededException">
            Too many requests have been submitted. Try again after a brief wait.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ServerInternalException">
            The server experienced an internal error. Try again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/license-manager-2018-08-01/GetLicenseConfiguration">REST API Reference for GetLicenseConfiguration Operation</seealso>
        </member>
        <member name="M:Amazon.LicenseManager.IAmazonLicenseManager.GetServiceSettingsAsync(Amazon.LicenseManager.Model.GetServiceSettingsRequest,System.Threading.CancellationToken)">
            <summary>
            Gets the License Manager settings for the current Region.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetServiceSettings service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetServiceSettings service method, as returned by LicenseManager.</returns>
            <exception cref="T:Amazon.LicenseManager.Model.AccessDeniedException">
            Access to resource denied.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.AuthorizationException">
            The AWS user account does not have permission to perform the action. Check the IAM
            policy associated with this account.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.RateLimitExceededException">
            Too many requests have been submitted. Try again after a brief wait.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ServerInternalException">
            The server experienced an internal error. Try again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/license-manager-2018-08-01/GetServiceSettings">REST API Reference for GetServiceSettings Operation</seealso>
        </member>
        <member name="M:Amazon.LicenseManager.IAmazonLicenseManager.ListAssociationsForLicenseConfigurationAsync(Amazon.LicenseManager.Model.ListAssociationsForLicenseConfigurationRequest,System.Threading.CancellationToken)">
            <summary>
            Lists the resource associations for the specified license configuration.
            
             
            <para>
            Resource associations need not consume licenses from a license configuration. For
            example, an AMI or a stopped instance might not consume a license (depending on the
            license rules).
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListAssociationsForLicenseConfiguration service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListAssociationsForLicenseConfiguration service method, as returned by LicenseManager.</returns>
            <exception cref="T:Amazon.LicenseManager.Model.AccessDeniedException">
            Access to resource denied.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.AuthorizationException">
            The AWS user account does not have permission to perform the action. Check the IAM
            policy associated with this account.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.FilterLimitExceededException">
            The request uses too many filters or too many filter values.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.InvalidParameterValueException">
            One or more parameter values are not valid.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.RateLimitExceededException">
            Too many requests have been submitted. Try again after a brief wait.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ServerInternalException">
            The server experienced an internal error. Try again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/license-manager-2018-08-01/ListAssociationsForLicenseConfiguration">REST API Reference for ListAssociationsForLicenseConfiguration Operation</seealso>
        </member>
        <member name="M:Amazon.LicenseManager.IAmazonLicenseManager.ListFailuresForLicenseConfigurationOperationsAsync(Amazon.LicenseManager.Model.ListFailuresForLicenseConfigurationOperationsRequest,System.Threading.CancellationToken)">
            <summary>
            Lists the license configuration operations that failed.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListFailuresForLicenseConfigurationOperations service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListFailuresForLicenseConfigurationOperations service method, as returned by LicenseManager.</returns>
            <exception cref="T:Amazon.LicenseManager.Model.AccessDeniedException">
            Access to resource denied.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.AuthorizationException">
            The AWS user account does not have permission to perform the action. Check the IAM
            policy associated with this account.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.InvalidParameterValueException">
            One or more parameter values are not valid.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.RateLimitExceededException">
            Too many requests have been submitted. Try again after a brief wait.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ServerInternalException">
            The server experienced an internal error. Try again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/license-manager-2018-08-01/ListFailuresForLicenseConfigurationOperations">REST API Reference for ListFailuresForLicenseConfigurationOperations Operation</seealso>
        </member>
        <member name="M:Amazon.LicenseManager.IAmazonLicenseManager.ListLicenseConfigurationsAsync(Amazon.LicenseManager.Model.ListLicenseConfigurationsRequest,System.Threading.CancellationToken)">
            <summary>
            Lists the license configurations for your account.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListLicenseConfigurations service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListLicenseConfigurations service method, as returned by LicenseManager.</returns>
            <exception cref="T:Amazon.LicenseManager.Model.AccessDeniedException">
            Access to resource denied.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.AuthorizationException">
            The AWS user account does not have permission to perform the action. Check the IAM
            policy associated with this account.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.FilterLimitExceededException">
            The request uses too many filters or too many filter values.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.InvalidParameterValueException">
            One or more parameter values are not valid.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.RateLimitExceededException">
            Too many requests have been submitted. Try again after a brief wait.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ServerInternalException">
            The server experienced an internal error. Try again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/license-manager-2018-08-01/ListLicenseConfigurations">REST API Reference for ListLicenseConfigurations Operation</seealso>
        </member>
        <member name="M:Amazon.LicenseManager.IAmazonLicenseManager.ListLicenseSpecificationsForResourceAsync(Amazon.LicenseManager.Model.ListLicenseSpecificationsForResourceRequest,System.Threading.CancellationToken)">
            <summary>
            Describes the license configurations for the specified resource.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListLicenseSpecificationsForResource service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListLicenseSpecificationsForResource service method, as returned by LicenseManager.</returns>
            <exception cref="T:Amazon.LicenseManager.Model.AccessDeniedException">
            Access to resource denied.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.AuthorizationException">
            The AWS user account does not have permission to perform the action. Check the IAM
            policy associated with this account.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.InvalidParameterValueException">
            One or more parameter values are not valid.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.RateLimitExceededException">
            Too many requests have been submitted. Try again after a brief wait.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ServerInternalException">
            The server experienced an internal error. Try again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/license-manager-2018-08-01/ListLicenseSpecificationsForResource">REST API Reference for ListLicenseSpecificationsForResource Operation</seealso>
        </member>
        <member name="M:Amazon.LicenseManager.IAmazonLicenseManager.ListResourceInventoryAsync(Amazon.LicenseManager.Model.ListResourceInventoryRequest,System.Threading.CancellationToken)">
            <summary>
            Lists resources managed using Systems Manager inventory.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListResourceInventory service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListResourceInventory service method, as returned by LicenseManager.</returns>
            <exception cref="T:Amazon.LicenseManager.Model.AccessDeniedException">
            Access to resource denied.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.AuthorizationException">
            The AWS user account does not have permission to perform the action. Check the IAM
            policy associated with this account.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.FailedDependencyException">
            A dependency required to run the API is missing.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.FilterLimitExceededException">
            The request uses too many filters or too many filter values.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.InvalidParameterValueException">
            One or more parameter values are not valid.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.RateLimitExceededException">
            Too many requests have been submitted. Try again after a brief wait.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ServerInternalException">
            The server experienced an internal error. Try again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/license-manager-2018-08-01/ListResourceInventory">REST API Reference for ListResourceInventory Operation</seealso>
        </member>
        <member name="M:Amazon.LicenseManager.IAmazonLicenseManager.ListTagsForResourceAsync(Amazon.LicenseManager.Model.ListTagsForResourceRequest,System.Threading.CancellationToken)">
            <summary>
            Lists the tags for the specified license configuration.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListTagsForResource service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListTagsForResource service method, as returned by LicenseManager.</returns>
            <exception cref="T:Amazon.LicenseManager.Model.AccessDeniedException">
            Access to resource denied.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.AuthorizationException">
            The AWS user account does not have permission to perform the action. Check the IAM
            policy associated with this account.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.InvalidParameterValueException">
            One or more parameter values are not valid.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.RateLimitExceededException">
            Too many requests have been submitted. Try again after a brief wait.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ServerInternalException">
            The server experienced an internal error. Try again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/license-manager-2018-08-01/ListTagsForResource">REST API Reference for ListTagsForResource Operation</seealso>
        </member>
        <member name="M:Amazon.LicenseManager.IAmazonLicenseManager.ListUsageForLicenseConfigurationAsync(Amazon.LicenseManager.Model.ListUsageForLicenseConfigurationRequest,System.Threading.CancellationToken)">
            <summary>
            Lists all license usage records for a license configuration, displaying license consumption
            details by resource at a selected point in time. Use this action to audit the current
            license consumption for any license inventory and configuration.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListUsageForLicenseConfiguration service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListUsageForLicenseConfiguration service method, as returned by LicenseManager.</returns>
            <exception cref="T:Amazon.LicenseManager.Model.AccessDeniedException">
            Access to resource denied.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.AuthorizationException">
            The AWS user account does not have permission to perform the action. Check the IAM
            policy associated with this account.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.FilterLimitExceededException">
            The request uses too many filters or too many filter values.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.InvalidParameterValueException">
            One or more parameter values are not valid.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.RateLimitExceededException">
            Too many requests have been submitted. Try again after a brief wait.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ServerInternalException">
            The server experienced an internal error. Try again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/license-manager-2018-08-01/ListUsageForLicenseConfiguration">REST API Reference for ListUsageForLicenseConfiguration Operation</seealso>
        </member>
        <member name="M:Amazon.LicenseManager.IAmazonLicenseManager.TagResourceAsync(Amazon.LicenseManager.Model.TagResourceRequest,System.Threading.CancellationToken)">
            <summary>
            Adds the specified tags to the specified license configuration.
            </summary>
            <param name="request">Container for the necessary parameters to execute the TagResource service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the TagResource service method, as returned by LicenseManager.</returns>
            <exception cref="T:Amazon.LicenseManager.Model.AccessDeniedException">
            Access to resource denied.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.AuthorizationException">
            The AWS user account does not have permission to perform the action. Check the IAM
            policy associated with this account.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.InvalidParameterValueException">
            One or more parameter values are not valid.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.RateLimitExceededException">
            Too many requests have been submitted. Try again after a brief wait.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ServerInternalException">
            The server experienced an internal error. Try again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/license-manager-2018-08-01/TagResource">REST API Reference for TagResource Operation</seealso>
        </member>
        <member name="M:Amazon.LicenseManager.IAmazonLicenseManager.UntagResourceAsync(Amazon.LicenseManager.Model.UntagResourceRequest,System.Threading.CancellationToken)">
            <summary>
            Removes the specified tags from the specified license configuration.
            </summary>
            <param name="request">Container for the necessary parameters to execute the UntagResource service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UntagResource service method, as returned by LicenseManager.</returns>
            <exception cref="T:Amazon.LicenseManager.Model.AccessDeniedException">
            Access to resource denied.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.AuthorizationException">
            The AWS user account does not have permission to perform the action. Check the IAM
            policy associated with this account.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.InvalidParameterValueException">
            One or more parameter values are not valid.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.RateLimitExceededException">
            Too many requests have been submitted. Try again after a brief wait.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ServerInternalException">
            The server experienced an internal error. Try again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/license-manager-2018-08-01/UntagResource">REST API Reference for UntagResource Operation</seealso>
        </member>
        <member name="M:Amazon.LicenseManager.IAmazonLicenseManager.UpdateLicenseConfigurationAsync(Amazon.LicenseManager.Model.UpdateLicenseConfigurationRequest,System.Threading.CancellationToken)">
            <summary>
            Modifies the attributes of an existing license configuration.
            
             
            <para>
            A license configuration is an abstraction of a customer license agreement that can
            be consumed and enforced by License Manager. Components include specifications for
            the license type (licensing by instance, socket, CPU, or vCPU), allowed tenancy (shared
            tenancy, Dedicated Instance, Dedicated Host, or all of these), host affinity (how
            long a VM must be associated with a host), and the number of licenses purchased and
            used.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateLicenseConfiguration service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UpdateLicenseConfiguration service method, as returned by LicenseManager.</returns>
            <exception cref="T:Amazon.LicenseManager.Model.AccessDeniedException">
            Access to resource denied.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.AuthorizationException">
            The AWS user account does not have permission to perform the action. Check the IAM
            policy associated with this account.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.InvalidParameterValueException">
            One or more parameter values are not valid.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.RateLimitExceededException">
            Too many requests have been submitted. Try again after a brief wait.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ServerInternalException">
            The server experienced an internal error. Try again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/license-manager-2018-08-01/UpdateLicenseConfiguration">REST API Reference for UpdateLicenseConfiguration Operation</seealso>
        </member>
        <member name="M:Amazon.LicenseManager.IAmazonLicenseManager.UpdateLicenseSpecificationsForResourceAsync(Amazon.LicenseManager.Model.UpdateLicenseSpecificationsForResourceRequest,System.Threading.CancellationToken)">
            <summary>
            Adds or removes the specified license configurations for the specified AWS resource.
            
             
            <para>
            You can update the license specifications of AMIs, instances, and hosts. You cannot
            update the license specifications for launch templates and AWS CloudFormation templates,
            as they send license configurations to the operation that creates the resource.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateLicenseSpecificationsForResource service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UpdateLicenseSpecificationsForResource service method, as returned by LicenseManager.</returns>
            <exception cref="T:Amazon.LicenseManager.Model.AccessDeniedException">
            Access to resource denied.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.AuthorizationException">
            The AWS user account does not have permission to perform the action. Check the IAM
            policy associated with this account.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.InvalidParameterValueException">
            One or more parameter values are not valid.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.InvalidResourceStateException">
            License Manager cannot allocate a license to a resource because of its state. 
            
             
            <para>
            For example, you cannot allocate a license to an instance in the process of shutting
            down.
            </para>
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.LicenseUsageException">
            You do not have enough licenses available to support a new resource launch.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.RateLimitExceededException">
            Too many requests have been submitted. Try again after a brief wait.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ServerInternalException">
            The server experienced an internal error. Try again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/license-manager-2018-08-01/UpdateLicenseSpecificationsForResource">REST API Reference for UpdateLicenseSpecificationsForResource Operation</seealso>
        </member>
        <member name="M:Amazon.LicenseManager.IAmazonLicenseManager.UpdateServiceSettingsAsync(Amazon.LicenseManager.Model.UpdateServiceSettingsRequest,System.Threading.CancellationToken)">
            <summary>
            Updates License Manager settings for the current Region.
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateServiceSettings service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UpdateServiceSettings service method, as returned by LicenseManager.</returns>
            <exception cref="T:Amazon.LicenseManager.Model.AccessDeniedException">
            Access to resource denied.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.AuthorizationException">
            The AWS user account does not have permission to perform the action. Check the IAM
            policy associated with this account.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.InvalidParameterValueException">
            One or more parameter values are not valid.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.RateLimitExceededException">
            Too many requests have been submitted. Try again after a brief wait.
            </exception>
            <exception cref="T:Amazon.LicenseManager.Model.ServerInternalException">
            The server experienced an internal error. Try again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/license-manager-2018-08-01/UpdateServiceSettings">REST API Reference for UpdateServiceSettings Operation</seealso>
        </member>
    </members>
</doc>
